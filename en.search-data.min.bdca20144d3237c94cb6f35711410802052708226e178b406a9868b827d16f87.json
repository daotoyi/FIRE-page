[{"id":0,"href":"/docs/invest/Archive/","title":"Archive","section":"Invest","content":"  货币、信贷和债务是如何运作的  原则 变化中的世界秩序   "},{"id":1,"href":"/docs/invest/","title":"Invest","section":"Docs","content":"Instruction #   Record learning notes. Comb system knowledge.  Options #  An option is a contract that allows the holder the right to buy or sell an underlying asset or financial instrument at a specified strike price on or before a specified date, depending on the form of the option.\nFutures #  A futures contract (sometimes called futures) is a standardized legal agreement to buy or sell something at a predetermined price at a specified time in the future, between parties not known to each other.\nStocks #  Stock (also capital stock) consists of all of the shares into which ownership of a corporation or company is divided.\nFIRE #  "},{"id":2,"href":"/docs/invest/options/basic/","title":"Basic","section":"Options","content":"简介 #  此目录展示期权相关的概念 #    Options  策略 # 见习 # 结果 #   "},{"id":3,"href":"/docs/invest/options/case/","title":"Case","section":"Options","content":"简介 #  此目录展示期权相关的案例 #  "},{"id":4,"href":"/docs/invest/options/strategy/","title":"Strategy","section":"Options","content":"简介 #  此目录展示期权相关的策略 #  "},{"id":5,"href":"/docs/project/","title":"Project","section":"Docs","content":"  Shiti  简介 # 此目录展示实体相关的项目。 MiDaYinYue 商场唱歌厅 - 咪哒音乐   Canyin  简介 # 此目录展示餐饮相关的项目。 KuaiCan 简介 # 现在的快餐大概 10 元一份，好一点的 15 到 20 元不等。因为附近是人流聚集区，所以价格比较高，离电子城不远的一个工业区那边快餐只要五六块，好一点的七八块一份。 首先去找到工业区的餐馆谈，你就说你批发他们家的快餐，然后把价格压低一些。记住多找几家快餐店。然后把顾客经常点的快餐写进你的菜单，再给你的快餐起个名字叫极速快餐。如果有顾客来点餐，你也不需要自己做菜，只要把这些低价批发过来的快餐加热一下就可以卖出去了。 然后你找到做鼠标垫的厂家，把你的广告词印到鼠标垫上：点餐就点“极速快餐”！当然还要印上联系方式。然后去电子城和附近的小区挨家挨户发放鼠标垫，告诉他们以后鼠标垫都是免费赠送的。坏了，不喜欢了，打电话给我，我再免费送。 这样顾客在想要点餐的时候，只要看到鼠标垫，就会知道这家店的联系方式，下单成功的概率会比宣传单高很多，因为鼠标垫是长期使用的，而宣传单一般都是到手就扔。   E Commerce  简介 # 此目录展示电商相关的项目。 Shopee 分销下单 铺货 # 汇率 # https://themoneyconverter.com/CN 1 CNY = 4.4299 TWD 1 CNY = 0.66289 MYR 发货 # 注意事项 # 分单 # 快递单号+此快递包裹需分单发货   Wuliu  简介 # 此目录展示物流快递相关的项目。 JiTu 海外物流 - 加盟   "},{"id":6,"href":"/docs/project/shiti/","title":"Shiti","section":"Project","content":"简介 #  此目录展示实体相关的项目。\n  MiDaYinYue  商场唱歌厅 - 咪哒音乐   "},{"id":7,"href":"/docs/project/canyin/","title":"Canyin","section":"Project","content":"简介 #  此目录展示餐饮相关的项目。\n  KuaiCan  简介 # 现在的快餐大概 10 元一份，好一点的 15 到 20 元不等。因为附近是人流聚集区，所以价格比较高，离电子城不远的一个工业区那边快餐只要五六块，好一点的七八块一份。 首先去找到工业区的餐馆谈，你就说你批发他们家的快餐，然后把价格压低一些。记住多找几家快餐店。然后把顾客经常点的快餐写进你的菜单，再给你的快餐起个名字叫极速快餐。如果有顾客来点餐，你也不需要自己做菜，只要把这些低价批发过来的快餐加热一下就可以卖出去了。 然后你找到做鼠标垫的厂家，把你的广告词印到鼠标垫上：点餐就点“极速快餐”！当然还要印上联系方式。然后去电子城和附近的小区挨家挨户发放鼠标垫，告诉他们以后鼠标垫都是免费赠送的。坏了，不喜欢了，打电话给我，我再免费送。 这样顾客在想要点餐的时候，只要看到鼠标垫，就会知道这家店的联系方式，下单成功的概率会比宣传单高很多，因为鼠标垫是长期使用的，而宣传单一般都是到手就扔。   "},{"id":8,"href":"/docs/project/e-commerce/","title":"E Commerce","section":"Project","content":"简介 #  此目录展示电商相关的项目。\n  Shopee  分销下单 铺货 # 汇率 # https://themoneyconverter.com/CN 1 CNY = 4.4299 TWD 1 CNY = 0.66289 MYR 发货 # 注意事项 # 分单 # 快递单号+此快递包裹需分单发货   "},{"id":9,"href":"/docs/project/wuliu/","title":"Wuliu","section":"Project","content":"简介 #  此目录展示物流快递相关的项目。\n  JiTu  海外物流 - 加盟   "},{"id":10,"href":"/posts/creating-a-new-theme/","title":"Creating a New Theme","section":"Blog","content":"Introduction #  This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nWe\u0026rsquo;ll start with creating a new site with a very basic template. Then we\u0026rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.\nIn this tutorial, commands that you enter will start with the \u0026ldquo;$\u0026rdquo; prompt. The output will follow. Lines that start with \u0026ldquo;#\u0026rdquo; are comments that I\u0026rsquo;ve added to explain a point. When I show updates to a file, the \u0026ldquo;:wq\u0026rdquo; on the last line means to save the file.\nHere\u0026rsquo;s an example:\n## this is a comment $ echo this is a command this is a command ## edit the file $ vi foo.md +++ date = \u0026quot;2014-09-28\u0026quot; title = \u0026quot;creating a new theme\u0026quot; +++ bah and humbug :wq ## show it $ cat foo.md +++ date = \u0026quot;2014-09-28\u0026quot; title = \u0026quot;creating a new theme\u0026quot; +++ bah and humbug $ Some Definitions #  There are a few concepts that you need to understand before creating a theme.\nSkins #  Skins are the files responsible for the look and feel of your site. It’s the CSS that controls colors and fonts, it’s the Javascript that determines actions and reactions. It’s also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.\nYou have two ways to create a skin. The simplest way is to create it in the layouts/ directory. If you do, then you don’t have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the layouts/ directory so it will always find the skin.\nYour second choice is to create it in a sub-directory of the themes/ directory. If you do, then you must always tell Hugo where to search for the skin. It’s extra work, though, so why bother with it?\nThe difference between creating a skin in layouts/ and creating it in themes/ is very subtle. A skin in layouts/ can’t be customized without updating the templates and static files that it is built from. A skin created in themes/, on the other hand, can be and that makes it easier for other people to use it.\nThe rest of this tutorial will call a skin created in the themes/ directory a theme.\nNote that you can use this tutorial to create a skin in the layouts/ directory if you wish to. The main difference will be that you won’t need to update the site’s configuration file to use a theme.\nThe Home Page #  The home page, or landing page, is the first page that many visitors to a site see. It is the index.html file in the root directory of the web site. Since Hugo writes files to the public/ directory, our home page is public/index.html.\nSite Configuration File #  When Hugo runs, it looks for a configuration file that contains settings that override default values for the entire site. The file can use TOML, YAML, or JSON. I prefer to use TOML for my configuration files. If you prefer to use JSON or YAML, you’ll need to translate my examples. You’ll also need to change the name of the file since Hugo uses the extension to determine how to process it.\nHugo translates Markdown files into HTML. By default, Hugo expects to find Markdown files in your content/ directory and template files in your themes/ directory. It will create HTML files in your public/ directory. You can change this by specifying alternate locations in the configuration file.\nContent #  Content is stored in text files that contain two sections. The first section is the “front matter,” which is the meta-information on the content. The second section contains Markdown that will be converted to HTML.\nFront Matter #  The front matter is information about the content. Like the configuration file, it can be written in TOML, YAML, or JSON. Unlike the configuration file, Hugo doesn’t use the file’s extension to know the format. It looks for markers to signal the type. TOML is surrounded by “+++”, YAML by “---”, and JSON is enclosed in curly braces. I prefer to use TOML, so you’ll need to translate my examples if you prefer YAML or JSON.\nThe information in the front matter is passed into the template before the content is rendered into HTML.\nMarkdown #  Content is written in Markdown which makes it easier to create the content. Hugo runs the content through a Markdown engine to create the HTML which will be written to the output file.\nTemplate Files #  Hugo uses template files to render content into HTML. Template files are a bridge between the content and presentation. Rules in the template define what content is published, where it\u0026rsquo;s published to, and how it will rendered to the HTML file. The template guides the presentation by specifying the style to use.\nThere are three types of templates: single, list, and partial. Each type takes a bit of content as input and transforms it based on the commands in the template.\nHugo uses its knowledge of the content to find the template file used to render the content. If it can’t find a template that is an exact match for the content, it will shift up a level and search from there. It will continue to do so until it finds a matching template or runs out of templates to try. If it can’t find a template, it will use the default template for the site.\nPlease note that you can use the front matter to influence Hugo’s choice of templates.\nSingle Template #  A single template is used to render a single piece of content. For example, an article or post would be a single piece of content and use a single template.\nList Template #  A list template renders a group of related content. That could be a summary of recent postings or all articles in a category. List templates can contain multiple groups.\nThe homepage template is a special type of list template. Hugo assumes that the home page of your site will act as the portal for the rest of the content in the site.\nPartial Template #  A partial template is a template that can be included in other templates. Partial templates must be called using the “partial” template command. They are very handy for rolling up common behavior. For example, your site may have a banner that all pages use. Instead of copying the text of the banner into every single and list template, you could create a partial with the banner in it. That way if you decide to change the banner, you only have to change the partial template.\nCreate a New Site #  Let\u0026rsquo;s use Hugo to create a new web site. I\u0026rsquo;m a Mac user, so I\u0026rsquo;ll create mine in my home directory, in the Sites folder. If you\u0026rsquo;re using Linux, you might have to create the folder first.\nThe \u0026ldquo;new site\u0026rdquo; command will create a skeleton of a site. It will give you the basic directory structure and a useable configuration file.\n$ hugo new site ~/Sites/zafta $ cd ~/Sites/zafta $ ls -l total 8 drwxr-xr-x 7 quoha staff 238 Sep 29 16:49 . drwxr-xr-x 3 quoha staff 102 Sep 29 16:49 .. drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes -rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static $ Take a look in the content/ directory to confirm that it is empty.\nThe other directories (archetypes/, layouts/, and static/) are used when customizing a theme. That\u0026rsquo;s a topic for a different tutorial, so please ignore them for now.\nGenerate the HTML For the New Site #  Running the hugo command with no options will read all the available content and generate the HTML files. It will also copy all static files (that\u0026rsquo;s everything that\u0026rsquo;s not content). Since we have an empty site, it won\u0026rsquo;t do much, but it will do it very quickly.\n$ hugo --verbose INFO: 2014/09/29 Using config file: config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] WARN: 2014/09/29 Unable to locate layout: [404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms $ The \u0026ldquo;--verbose\u0026rdquo; flag gives extra information that will be helpful when we build the template. Every line of the output that starts with \u0026ldquo;INFO:\u0026rdquo; or \u0026ldquo;WARN:\u0026rdquo; is present because we used that flag. The lines that start with \u0026ldquo;WARN:\u0026rdquo; are warning messages. We\u0026rsquo;ll go over them later.\nWe can verify that the command worked by looking at the directory again.\n$ ls -l total 8 drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes -rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts drwxr-xr-x 4 quoha staff 136 Sep 29 17:02 public drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static $ See that new public/ directory? Hugo placed all generated content there. When you\u0026rsquo;re ready to publish your web site, that\u0026rsquo;s the place to start. For now, though, let\u0026rsquo;s just confirm that we have what we\u0026rsquo;d expect from a site with no content.\n$ ls -l public total 16 -rw-r--r-- 1 quoha staff 416 Sep 29 17:02 index.xml -rw-r--r-- 1 quoha staff 262 Sep 29 17:02 sitemap.xml $ Hugo created two XML files, which is standard, but there are no HTML files.\nTest the New Site #  Verify that you can run the built-in web server. It will dramatically shorten your development cycle if you do. Start it by running the \u0026ldquo;server\u0026rdquo; command. If it is successful, you will see output similar to the following:\n$ hugo server --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] WARN: 2014/09/29 Unable to locate layout: [404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms Serving pages from /Users/quoha/Sites/zafta/public Web Server is available at http://localhost:1313 Press Ctrl+C to stop Connect to the listed URL (it\u0026rsquo;s on the line that starts with \u0026ldquo;Web Server\u0026rdquo;). If everything is working correctly, you should get a page that shows the following:\nindex.xml sitemap.xml That\u0026rsquo;s a listing of your public/ directory. Hugo didn\u0026rsquo;t create a home page because our site has no content. When there\u0026rsquo;s no index.html file in a directory, the server lists the files in the directory, which is what you should see in your browser.\nLet’s go back and look at those warnings again.\nWARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] WARN: 2014/09/29 Unable to locate layout: [404.html] That second warning is easier to explain. We haven’t created a template to be used to generate “page not found errors.” The 404 message is a topic for a separate tutorial.\nNow for the first warning. It is for the home page. You can tell because the first layout that it looked for was “index.html.” That’s only used by the home page.\nI like that the verbose flag causes Hugo to list the files that it\u0026rsquo;s searching for. For the home page, they are index.html, _default/list.html, and _default/single.html. There are some rules that we\u0026rsquo;ll cover later that explain the names and paths. For now, just remember that Hugo couldn\u0026rsquo;t find a template for the home page and it told you so.\nAt this point, you\u0026rsquo;ve got a working installation and site that we can build upon. All that’s left is to add some content and a theme to display it.\nCreate a New Theme #  Hugo doesn\u0026rsquo;t ship with a default theme. There are a few available (I counted a dozen when I first installed Hugo) and Hugo comes with a command to create new themes.\nWe\u0026rsquo;re going to create a new theme called \u0026ldquo;zafta.\u0026rdquo; Since the goal of this tutorial is to show you how to fill out the files to pull in your content, the theme will not contain any CSS. In other words, ugly but functional.\nAll themes have opinions on content and layout. For example, Zafta uses \u0026ldquo;post\u0026rdquo; over \u0026ldquo;blog\u0026rdquo;. Strong opinions make for simpler templates but differing opinions make it tougher to use themes. When you build a theme, consider using the terms that other themes do.\nCreate a Skeleton #  Use the hugo \u0026ldquo;new\u0026rdquo; command to create the skeleton of a theme. This creates the directory structure and places empty files for you to fill out.\n$ hugo new theme zafta $ ls -l total 8 drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes -rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts drwxr-xr-x 4 quoha staff 136 Sep 29 17:02 public drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static drwxr-xr-x 3 quoha staff 102 Sep 29 17:31 themes $ find themes -type f | xargs ls -l -rw-r--r-- 1 quoha staff 1081 Sep 29 17:31 themes/zafta/LICENSE.md -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/archetypes/default.md -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/single.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/header.html -rw-r--r-- 1 quoha staff 93 Sep 29 17:31 themes/zafta/theme.toml $ The skeleton includes templates (the files ending in .html), license file, a description of your theme (the theme.toml file), and an empty archetype.\nPlease take a minute to fill out the theme.toml and LICENSE.md files. They\u0026rsquo;re optional, but if you\u0026rsquo;re going to be distributing your theme, it tells the world who to praise (or blame). It\u0026rsquo;s also nice to declare the license so that people will know how they can use the theme.\n$ vi themes/zafta/theme.toml author = \u0026quot;michael d henderson\u0026quot; description = \u0026quot;a minimal working template\u0026quot; license = \u0026quot;MIT\u0026quot; name = \u0026quot;zafta\u0026quot; source_repo = \u0026quot;\u0026quot; tags = [\u0026quot;tags\u0026quot;, \u0026quot;categories\u0026quot;] :wq ## also edit themes/zafta/LICENSE.md and change ## the bit that says \u0026quot;YOUR_NAME_HERE\u0026quot; Note that the the skeleton\u0026rsquo;s template files are empty. Don\u0026rsquo;t worry, we\u0026rsquo;ll be changing that shortly.\n$ find themes/zafta -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/single.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/header.html $ Update the Configuration File to Use the Theme #  Now that we\u0026rsquo;ve got a theme to work with, it\u0026rsquo;s a good idea to add the theme name to the configuration file. This is optional, because you can always add \u0026ldquo;-t zafta\u0026rdquo; on all your commands. I like to put it the configuration file because I like shorter command lines. If you don\u0026rsquo;t put it in the configuration file or specify it on the command line, you won\u0026rsquo;t use the template that you\u0026rsquo;re expecting to.\nEdit the file to add the theme, add a title for the site, and specify that all of our content will use the TOML format.\n$ vi config.toml theme = \u0026quot;zafta\u0026quot; baseurl = \u0026quot;\u0026quot; languageCode = \u0026quot;en-us\u0026quot; title = \u0026quot;zafta - totally refreshing\u0026quot; MetaDataFormat = \u0026quot;toml\u0026quot; :wq $ Generate the Site #  Now that we have an empty theme, let\u0026rsquo;s generate the site again.\n$ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms $ Did you notice that the output is different? The warning message for the home page has disappeared and we have an additional information line saying that Hugo is syncing from the theme\u0026rsquo;s directory.\nLet\u0026rsquo;s check the public/ directory to see what Hugo\u0026rsquo;s created.\n$ ls -l public total 16 drwxr-xr-x 2 quoha staff 68 Sep 29 17:56 css -rw-r--r-- 1 quoha staff 0 Sep 29 17:56 index.html -rw-r--r-- 1 quoha staff 407 Sep 29 17:56 index.xml drwxr-xr-x 2 quoha staff 68 Sep 29 17:56 js -rw-r--r-- 1 quoha staff 243 Sep 29 17:56 sitemap.xml $ Notice four things:\n Hugo created a home page. This is the file public/index.html. Hugo created a css/ directory. Hugo created a js/ directory. Hugo claimed that it created 0 pages. It created a file and copied over static files, but didn\u0026rsquo;t create any pages. That\u0026rsquo;s because it considers a \u0026ldquo;page\u0026rdquo; to be a file created directly from a content file. It doesn\u0026rsquo;t count things like the index.html files that it creates automatically.  The Home Page #  Hugo supports many different types of templates. The home page is special because it gets its own type of template and its own template file. The file, layouts/index.html, is used to generate the HTML for the home page. The Hugo documentation says that this is the only required template, but that depends. Hugo\u0026rsquo;s warning message shows that it looks for three different templates:\nWARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] If it can\u0026rsquo;t find any of these, it completely skips creating the home page. We noticed that when we built the site without having a theme installed.\nWhen Hugo created our theme, it created an empty home page template. Now, when we build the site, Hugo finds the template and uses it to generate the HTML for the home page. Since the template file is empty, the HTML file is empty, too. If the template had any rules in it, then Hugo would have used them to generate the home page.\n$ find . -name index.html | xargs ls -l -rw-r--r-- 1 quoha staff 0 Sep 29 20:21 ./public/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 ./themes/zafta/layouts/index.html $ The Magic of Static #  Hugo does two things when generating the site. It uses templates to transform content into HTML and it copies static files into the site. Unlike content, static files are not transformed. They are copied exactly as they are.\nHugo assumes that your site will use both CSS and JavaScript, so it creates directories in your theme to hold them. Remember opinions? Well, Hugo\u0026rsquo;s opinion is that you\u0026rsquo;ll store your CSS in a directory named css/ and your JavaScript in a directory named js/. If you don\u0026rsquo;t like that, you can change the directory names in your theme directory or even delete them completely. Hugo\u0026rsquo;s nice enough to offer its opinion, then behave nicely if you disagree.\n$ find themes/zafta -type d | xargs ls -ld drwxr-xr-x 7 quoha staff 238 Sep 29 17:38 themes/zafta drwxr-xr-x 3 quoha staff 102 Sep 29 17:31 themes/zafta/archetypes drwxr-xr-x 5 quoha staff 170 Sep 29 17:31 themes/zafta/layouts drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/layouts/_default drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/layouts/partials drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/static drwxr-xr-x 2 quoha staff 68 Sep 29 17:31 themes/zafta/static/css drwxr-xr-x 2 quoha staff 68 Sep 29 17:31 themes/zafta/static/js $ The Theme Development Cycle #  When you\u0026rsquo;re working on a theme, you will make changes in the theme\u0026rsquo;s directory, rebuild the site, and check your changes in the browser. Hugo makes this very easy:\n Purge the public/ directory. Run the built in web server in watch mode. Open your site in a browser. Update the theme. Glance at your browser window to see changes. Return to step 4.  I’ll throw in one more opinion: never work on a theme on a live site. Always work on a copy of your site. Make changes to your theme, test them, then copy them up to your site. For added safety, use a tool like Git to keep a revision history of your content and your theme. Believe me when I say that it is too easy to lose both your mind and your changes.\nCheck the main Hugo site for information on using Git with Hugo.\nPurge the public/ Directory #  When generating the site, Hugo will create new files and update existing ones in the public/ directory. It will not delete files that are no longer used. For example, files that were created in the wrong directory or with the wrong title will remain. If you leave them, you might get confused by them later. I recommend cleaning out your site prior to generating it.\nNote: If you\u0026rsquo;re building on an SSD, you should ignore this. Churning on a SSD can be costly.\nHugo\u0026rsquo;s Watch Option #  Hugo\u0026rsquo;s \u0026ldquo;--watch\u0026rdquo; option will monitor the content/ and your theme directories for changes and rebuild the site automatically.\nLive Reload #  Hugo\u0026rsquo;s built in web server supports live reload. As pages are saved on the server, the browser is told to refresh the page. Usually, this happens faster than you can say, \u0026ldquo;Wow, that\u0026rsquo;s totally amazing.\u0026rdquo;\nDevelopment Commands #  Use the following commands as the basis for your workflow.\n## purge old files. hugo will recreate the public directory. ## $ rm -rf public ## ## run hugo in watch mode ## $ hugo server --watch --verbose Here\u0026rsquo;s sample output showing Hugo detecting a change to the template for the home page. Once generated, the web browser automatically reloaded the page. I\u0026rsquo;ve said this before, it\u0026rsquo;s amazing.\n$ rm -rf public $ hugo server --watch --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms Watching for changes in /Users/quoha/Sites/zafta/content Serving pages from /Users/quoha/Sites/zafta/public Web Server is available at http://localhost:1313 Press Ctrl+C to stop INFO: 2014/09/29 File System Event: [\u0026quot;/Users/quoha/Sites/zafta/themes/zafta/layouts/index.html\u0026quot;: MODIFY|ATTRIB] Change detected, rebuilding site WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 1 ms Update the Home Page Template #  The home page is one of a few special pages that Hugo creates automatically. As mentioned earlier, it looks for one of three files in the theme\u0026rsquo;s layout/ directory:\n index.html _default/list.html _default/single.html  We could update one of the default templates, but a good design decision is to update the most specific template available. That\u0026rsquo;s not a hard and fast rule (in fact, we\u0026rsquo;ll break it a few times in this tutorial), but it is a good generalization.\nMake a Static Home Page #  Right now, that page is empty because we don\u0026rsquo;t have any content and we don\u0026rsquo;t have any logic in the template. Let\u0026rsquo;s change that by adding some text to the template.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq $ Build the web site and then verify the results.\n$ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms $ find public -type f -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 78 Sep 29 21:26 public/index.html $ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; \u0026lt;/html\u0026gt; Live Reload #  Note: If you\u0026rsquo;re running the server with the --watch option, you\u0026rsquo;ll see different content in the file:\n$ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; \u0026lt;script\u0026gt;document.write('\u0026lt;script src=\u0026quot;http://' + (location.host || 'localhost').split(':')[0] + ':1313/livereload.js?mindelay=10\u0026quot;\u0026gt;\u0026lt;/' + 'script\u0026gt;')\u0026lt;/script\u0026gt;\u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; When you use --watch, the Live Reload script is added by Hugo. Look for live reload in the documentation to see what it does and how to disable it.\nBuild a \u0026ldquo;Dynamic\u0026rdquo; Home Page #  \u0026ldquo;Dynamic home page?\u0026rdquo; Hugo\u0026rsquo;s a static web site generator, so this seems an odd thing to say. I mean let\u0026rsquo;s have the home page automatically reflect the content in the site every time Hugo builds it. We\u0026rsquo;ll use iteration in the template to do that.\nCreate New Posts #  Now that we have the home page generating static content, let\u0026rsquo;s add some content to the site. We\u0026rsquo;ll display these posts as a list on the home page and on their own page, too.\nHugo has a command to generate a skeleton post, just like it does for sites and themes.\n$ hugo --verbose new post/first.md INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 attempting to create post/first.md of post INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/default.md ERROR: 2014/09/29 Unable to Cast \u0026lt;nil\u0026gt; to map[string]interface{} $ That wasn\u0026rsquo;t very nice, was it?\nThe \u0026ldquo;new\u0026rdquo; command uses an archetype to create the post file. Hugo created an empty default archetype file, but that causes an error when there\u0026rsquo;s a theme. For me, the workaround was to create an archetypes file specifically for the post type.\n$ vi themes/zafta/archetypes/post.md +++ Description = \u0026quot;\u0026quot; Tags = [] Categories = [] +++ :wq $ find themes/zafta/archetypes -type f | xargs ls -l -rw-r--r-- 1 quoha staff 0 Sep 29 21:53 themes/zafta/archetypes/default.md -rw-r--r-- 1 quoha staff 51 Sep 29 21:54 themes/zafta/archetypes/post.md $ hugo --verbose new post/first.md INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 attempting to create post/first.md of post INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/first.md /Users/quoha/Sites/zafta/content/post/first.md created $ hugo --verbose new post/second.md INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 attempting to create post/second.md of post INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/second.md /Users/quoha/Sites/zafta/content/post/second.md created $ ls -l content/post total 16 -rw-r--r-- 1 quoha staff 104 Sep 29 21:54 first.md -rw-r--r-- 1 quoha staff 105 Sep 29 21:57 second.md $ cat content/post/first.md +++ Categories = [] Description = \u0026quot;\u0026quot; Tags = [] date = \u0026quot;2014-09-29T21:54:53-05:00\u0026quot; title = \u0026quot;first\u0026quot; +++ my first post $ cat content/post/second.md +++ Categories = [] Description = \u0026quot;\u0026quot; Tags = [] date = \u0026quot;2014-09-29T21:57:09-05:00\u0026quot; title = \u0026quot;second\u0026quot; +++ my second post $ Build the web site and then verify the results.\n$ rm -rf public $ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 found taxonomies: map[string]string{\u0026quot;category\u0026quot;:\u0026quot;categories\u0026quot;, \u0026quot;tag\u0026quot;:\u0026quot;tags\u0026quot;} WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 2 pages created 0 tags created 0 categories created in 4 ms $ The output says that it created 2 pages. Those are our new posts:\n$ find public -type f -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 78 Sep 29 22:13 public/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/first/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/second/index.html $ The new files are empty because because the templates used to generate the content are empty. The homepage doesn\u0026rsquo;t show the new content, either. We have to update the templates to add the posts.\nList and Single Templates #  In Hugo, we have three major kinds of templates. There\u0026rsquo;s the home page template that we updated previously. It is used only by the home page. We also have \u0026ldquo;single\u0026rdquo; templates which are used to generate output for a single content file. We also have \u0026ldquo;list\u0026rdquo; templates that are used to group multiple pieces of content before generating output.\nGenerally speaking, list templates are named \u0026ldquo;list.html\u0026rdquo; and single templates are named \u0026ldquo;single.html.\u0026rdquo;\nThere are three other types of templates: partials, content views, and terms. We will not go into much detail on these.\nAdd Content to the Homepage #  The home page will contain a list of posts. Let\u0026rsquo;s update its template to add the posts that we just created. The logic in the template will run every time we build the site.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; {{ range first 10 .Data.Pages }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ end }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq $ Hugo uses the Go template engine. That engine scans the template files for commands which are enclosed between \u0026ldquo;{{\u0026rdquo; and \u0026ldquo;}}\u0026rdquo;. In our template, the commands are:\n range .Title end  The \u0026ldquo;range\u0026rdquo; command is an iterator. We\u0026rsquo;re going to use it to go through the first ten pages. Every HTML file that Hugo creates is treated as a page, so looping through the list of pages will look at every file that will be created.\nThe \u0026ldquo;.Title\u0026rdquo; command prints the value of the \u0026ldquo;title\u0026rdquo; variable. Hugo pulls it from the front matter in the Markdown file.\nThe \u0026ldquo;end\u0026rdquo; command signals the end of the range iterator. The engine loops back to the top of the iteration when it finds \u0026ldquo;end.\u0026rdquo; Everything between the \u0026ldquo;range\u0026rdquo; and \u0026ldquo;end\u0026rdquo; is evaluated every time the engine goes through the iteration. In this file, that would cause the title from the first ten pages to be output as heading level one.\nIt\u0026rsquo;s helpful to remember that some variables, like .Data, are created before any output files. Hugo loads every content file into the variable and then gives the template a chance to process before creating the HTML files.\nBuild the web site and then verify the results.\n$ rm -rf public $ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 found taxonomies: map[string]string{\u0026quot;tag\u0026quot;:\u0026quot;tags\u0026quot;, \u0026quot;category\u0026quot;:\u0026quot;categories\u0026quot;} WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 2 pages created 0 tags created 0 categories created in 4 ms $ find public -type f -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 94 Sep 29 22:23 public/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/first/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/second/index.html $ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;second\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;first\u0026lt;/h1\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; $ Congratulations, the home page shows the title of the two posts. The posts themselves are still empty, but let\u0026rsquo;s take a moment to appreciate what we\u0026rsquo;ve done. Your template now generates output dynamically. Believe it or not, by inserting the range command inside of those curly braces, you\u0026rsquo;ve learned everything you need to know to build a theme. All that\u0026rsquo;s really left is understanding which template will be used to generate each content file and becoming familiar with the commands for the template engine.\nAnd, if that were entirely true, this tutorial would be much shorter. There are a few things to know that will make creating a new template much easier. Don\u0026rsquo;t worry, though, that\u0026rsquo;s all to come.\nAdd Content to the Posts #  We\u0026rsquo;re working with posts, which are in the content/post/ directory. That means that their section is \u0026ldquo;post\u0026rdquo; (and if we don\u0026rsquo;t do something weird, their type is also \u0026ldquo;post\u0026rdquo;).\nHugo uses the section and type to find the template file for every piece of content. Hugo will first look for a template file that matches the section or type name. If it can\u0026rsquo;t find one, then it will look in the _default/ directory. There are some twists that we\u0026rsquo;ll cover when we get to categories and tags, but for now we can assume that Hugo will try post/single.html, then _default/single.html.\nNow that we know the search rule, let\u0026rsquo;s see what we actually have available:\n$ find themes/zafta -name single.html | xargs ls -l -rw-r--r-- 1 quoha staff 132 Sep 29 17:31 themes/zafta/layouts/_default/single.html We could create a new template, post/single.html, or change the default. Since we don\u0026rsquo;t know of any other content types, let\u0026rsquo;s start with updating the default.\nRemember, any content that we haven\u0026rsquo;t created a template for will end up using this template. That can be good or bad. Bad because I know that we\u0026rsquo;re going to be adding different types of content and we\u0026rsquo;re going to end up undoing some of the changes we\u0026rsquo;ve made. It\u0026rsquo;s good because we\u0026rsquo;ll be able to see immediate results. It\u0026rsquo;s also good to start here because we can start to build the basic layout for the site. As we add more content types, we\u0026rsquo;ll refactor this file and move logic around. Hugo makes that fairly painless, so we\u0026rsquo;ll accept the cost and proceed.\nPlease see the Hugo documentation on template rendering for all the details on determining which template to use. And, as the docs mention, if you\u0026rsquo;re building a single page application (SPA) web site, you can delete all of the other templates and work with just the default single page. That\u0026rsquo;s a refreshing amount of joy right there.\nUpdate the Template File #  $ vi themes/zafta/layouts/_default/single.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ .Content }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq $ Build the web site and verify the results.\n$ rm -rf public $ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 found taxonomies: map[string]string{\u0026quot;tag\u0026quot;:\u0026quot;tags\u0026quot;, \u0026quot;category\u0026quot;:\u0026quot;categories\u0026quot;} WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 2 pages created 0 tags created 0 categories created in 4 ms $ find public -type f -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 94 Sep 29 22:40 public/index.html -rw-r--r-- 1 quoha staff 125 Sep 29 22:40 public/post/first/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:40 public/post/index.html -rw-r--r-- 1 quoha staff 128 Sep 29 22:40 public/post/second/index.html $ cat public/post/first/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;first\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;first\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;my first post\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; $ cat public/post/second/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;second\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;second\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;my second post\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; $ Notice that the posts now have content. You can go to localhost:1313/post/first to verify.\nLinking to Content #  The posts are on the home page. Let\u0026rsquo;s add a link from there to the post. Since this is the home page, we\u0026rsquo;ll update its template.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; {{ range first 10 .Data.Pages }} \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;{{ .Permalink }}\u0026quot;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; {{ end }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Build the web site and verify the results.\n$ rm -rf public $ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 found taxonomies: map[string]string{\u0026quot;tag\u0026quot;:\u0026quot;tags\u0026quot;, \u0026quot;category\u0026quot;:\u0026quot;categories\u0026quot;} WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 2 pages created 0 tags created 0 categories created in 4 ms $ find public -type f -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 149 Sep 29 22:44 public/index.html -rw-r--r-- 1 quoha staff 125 Sep 29 22:44 public/post/first/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:44 public/post/index.html -rw-r--r-- 1 quoha staff 128 Sep 29 22:44 public/post/second/index.html $ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;/post/second/\u0026quot;\u0026gt;second\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;/post/first/\u0026quot;\u0026gt;first\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; $ Create a Post Listing #  We have the posts displaying on the home page and on their own page. We also have a file public/post/index.html that is empty. Let\u0026rsquo;s make it show a list of all posts (not just the first ten).\nWe need to decide which template to update. This will be a listing, so it should be a list template. Let\u0026rsquo;s take a quick look and see which list templates are available.\n$ find themes/zafta -name list.html | xargs ls -l -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html As with the single post, we have to decide to update _default/list.html or create post/list.html. We still don\u0026rsquo;t have multiple content types, so let\u0026rsquo;s stay consistent and update the default list template.\nCreating Top Level Pages #  Let\u0026rsquo;s add an \u0026ldquo;about\u0026rdquo; page and display it at the top level (as opposed to a sub-level like we did with posts).\nThe default in Hugo is to use the directory structure of the content/ directory to guide the location of the generated html in the public/ directory. Let\u0026rsquo;s verify that by creating an \u0026ldquo;about\u0026rdquo; page at the top level:\n$ vi content/about.md +++ title = \u0026quot;about\u0026quot; description = \u0026quot;about this site\u0026quot; date = \u0026quot;2014-09-27\u0026quot; slug = \u0026quot;about time\u0026quot; +++ ## about us i'm speechless :wq Generate the web site and verify the results.\n$ find public -name '*.html' | xargs ls -l -rw-rw-r-- 1 mdhender staff 334 Sep 27 15:08 public/about-time/index.html -rw-rw-r-- 1 mdhender staff 527 Sep 27 15:08 public/index.html -rw-rw-r-- 1 mdhender staff 358 Sep 27 15:08 public/post/first-post/index.html -rw-rw-r-- 1 mdhender staff 0 Sep 27 15:08 public/post/index.html -rw-rw-r-- 1 mdhender staff 342 Sep 27 15:08 public/post/second-post/index.html Notice that the page wasn\u0026rsquo;t created at the top level. It was created in a sub-directory named \u0026lsquo;about-time/\u0026rsquo;. That name came from our slug. Hugo will use the slug to name the generated content. It\u0026rsquo;s a reasonable default, by the way, but we can learn a few things by fighting it for this file.\nOne other thing. Take a look at the home page.\n$ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;http://localhost:1313/post/theme/\u0026quot;\u0026gt;creating a new theme\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;http://localhost:1313/about-time/\u0026quot;\u0026gt;about\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;http://localhost:1313/post/second-post/\u0026quot;\u0026gt;second\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;http://localhost:1313/post/first-post/\u0026quot;\u0026gt;first\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;script\u0026gt;document.write('\u0026lt;script src=\u0026quot;http://' + (location.host || 'localhost').split(':')[0] + ':1313/livereload.js?mindelay=10\u0026quot;\u0026gt;\u0026lt;/' + 'script\u0026gt;')\u0026lt;/script\u0026gt;\u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that the \u0026ldquo;about\u0026rdquo; link is listed with the posts? That\u0026rsquo;s not desirable, so let\u0026rsquo;s change that first.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;posts\u0026lt;/h1\u0026gt; {{ range first 10 .Data.Pages }} {{ if eq .Type \u0026quot;post\u0026quot;}} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026quot;{{ .Permalink }}\u0026quot;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ end }} {{ end }} \u0026lt;h1\u0026gt;pages\u0026lt;/h1\u0026gt; {{ range .Data.Pages }} {{ if eq .Type \u0026quot;page\u0026quot; }} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026quot;{{ .Permalink }}\u0026quot;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ end }} {{ end }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq Generate the web site and verify the results. The home page has two sections, posts and pages, and each section has the right set of headings and links in it.\nBut, that about page still renders to about-time/index.html.\n$ find public -name '*.html' | xargs ls -l -rw-rw-r-- 1 mdhender staff 334 Sep 27 15:33 public/about-time/index.html -rw-rw-r-- 1 mdhender staff 645 Sep 27 15:33 public/index.html -rw-rw-r-- 1 mdhender staff 358 Sep 27 15:33 public/post/first-post/index.html -rw-rw-r-- 1 mdhender staff 0 Sep 27 15:33 public/post/index.html -rw-rw-r-- 1 mdhender staff 342 Sep 27 15:33 public/post/second-post/index.html Knowing that hugo is using the slug to generate the file name, the simplest solution is to change the slug. Let\u0026rsquo;s do it the hard way and change the permalink in the configuration file.\n$ vi config.toml [permalinks] page = \u0026quot;/:title/\u0026quot; about = \u0026quot;/:filename/\u0026quot; Generate the web site and verify that this didn\u0026rsquo;t work. Hugo lets \u0026ldquo;slug\u0026rdquo; or \u0026ldquo;URL\u0026rdquo; override the permalinks setting in the configuration file. Go ahead and comment out the slug in content/about.md, then generate the web site to get it to be created in the right place.\nSharing Templates #  If you\u0026rsquo;ve been following along, you probably noticed that posts have titles in the browser and the home page doesn\u0026rsquo;t. That\u0026rsquo;s because we didn\u0026rsquo;t put the title in the home page\u0026rsquo;s template (layouts/index.html). That\u0026rsquo;s an easy thing to do, but let\u0026rsquo;s look at a different option.\nWe can put the common bits into a shared template that\u0026rsquo;s stored in the themes/zafta/layouts/partials/ directory.\nCreate the Header and Footer Partials #  In Hugo, a partial is a sugar-coated template. Normally a template reference has a path specified. Partials are different. Hugo searches for them along a TODO defined search path. This makes it easier for end-users to override the theme\u0026rsquo;s presentation.\n$ vi themes/zafta/layouts/partials/header.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; :wq $ vi themes/zafta/layouts/partials/footer.html \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq Update the Home Page Template to Use the Partials #  The most noticeable difference between a template call and a partials call is the lack of path:\n{{ template \u0026quot;theme/partials/header.html\u0026quot; . }} versus\n{{ partial \u0026quot;header.html\u0026quot; . }} Both pass in the context.\nLet\u0026rsquo;s change the home page template to use these new partials.\n$ vi themes/zafta/layouts/index.html {{ partial \u0026quot;header.html\u0026quot; . }} \u0026lt;h1\u0026gt;posts\u0026lt;/h1\u0026gt; {{ range first 10 .Data.Pages }} {{ if eq .Type \u0026quot;post\u0026quot;}} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026quot;{{ .Permalink }}\u0026quot;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ end }} {{ end }} \u0026lt;h1\u0026gt;pages\u0026lt;/h1\u0026gt; {{ range .Data.Pages }} {{ if or (eq .Type \u0026quot;page\u0026quot;) (eq .Type \u0026quot;about\u0026quot;) }} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026quot;{{ .Permalink }}\u0026quot;\u0026gt;{{ .Type }} - {{ .Title }} - {{ .RelPermalink }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ end }} {{ end }} {{ partial \u0026quot;footer.html\u0026quot; . }} :wq Generate the web site and verify the results. The title on the home page is now \u0026ldquo;your title here\u0026rdquo;, which comes from the \u0026ldquo;title\u0026rdquo; variable in the config.toml file.\nUpdate the Default Single Template to Use the Partials #  $ vi themes/zafta/layouts/_default/single.html {{ partial \u0026quot;header.html\u0026quot; . }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ .Content }} {{ partial \u0026quot;footer.html\u0026quot; . }} :wq Generate the web site and verify the results. The title on the posts and the about page should both reflect the value in the markdown file.\nAdd “Date Published” to Posts #  It\u0026rsquo;s common to have posts display the date that they were written or published, so let\u0026rsquo;s add that. The front matter of our posts has a variable named \u0026ldquo;date.\u0026rdquo; It\u0026rsquo;s usually the date the content was created, but let\u0026rsquo;s pretend that\u0026rsquo;s the value we want to display.\nAdd “Date Published” to the Template #  We\u0026rsquo;ll start by updating the template used to render the posts. The template code will look like:\n{{ .Date.Format \u0026quot;Mon, Jan 2, 2006\u0026quot; }} Posts use the default single template, so we\u0026rsquo;ll change that file.\n$ vi themes/zafta/layouts/_default/single.html {{ partial \u0026quot;header.html\u0026quot; . }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;{{ .Date.Format \u0026quot;Mon, Jan 2, 2006\u0026quot; }}\u0026lt;/h2\u0026gt; {{ .Content }} {{ partial \u0026quot;footer.html\u0026quot; . }} :wq Generate the web site and verify the results. The posts now have the date displayed in them. There\u0026rsquo;s a problem, though. The \u0026ldquo;about\u0026rdquo; page also has the date displayed.\nAs usual, there are a couple of ways to make the date display only on posts. We could do an \u0026ldquo;if\u0026rdquo; statement like we did on the home page. Another way would be to create a separate template for posts.\nThe \u0026ldquo;if\u0026rdquo; solution works for sites that have just a couple of content types. It aligns with the principle of \u0026ldquo;code for today,\u0026rdquo; too.\nLet\u0026rsquo;s assume, though, that we\u0026rsquo;ve made our site so complex that we feel we have to create a new template type. In Hugo-speak, we\u0026rsquo;re going to create a section template.\nLet\u0026rsquo;s restore the default single template before we forget.\n$ mkdir themes/zafta/layouts/post $ vi themes/zafta/layouts/_default/single.html {{ partial \u0026quot;header.html\u0026quot; . }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ .Content }} {{ partial \u0026quot;footer.html\u0026quot; . }} :wq Now we\u0026rsquo;ll update the post\u0026rsquo;s version of the single template. If you remember Hugo\u0026rsquo;s rules, the template engine will use this version over the default.\n$ vi themes/zafta/layouts/post/single.html {{ partial \u0026quot;header.html\u0026quot; . }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;{{ .Date.Format \u0026quot;Mon, Jan 2, 2006\u0026quot; }}\u0026lt;/h2\u0026gt; {{ .Content }} {{ partial \u0026quot;footer.html\u0026quot; . }} :wq Note that we removed the date logic from the default template and put it in the post template. Generate the web site and verify the results. Posts have dates and the about page doesn\u0026rsquo;t.\nDon\u0026rsquo;t Repeat Yourself #  DRY is a good design goal and Hugo does a great job supporting it. Part of the art of a good template is knowing when to add a new template and when to update an existing one. While you\u0026rsquo;re figuring that out, accept that you\u0026rsquo;ll be doing some refactoring. Hugo makes that easy and fast, so it\u0026rsquo;s okay to delay splitting up a template.\n"},{"id":11,"href":"/posts/migrate-from-jekyll/","title":"Migrate to Hugo from Jekyll","section":"Blog","content":"Move static content to static #  Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like\n▾ \u0026lt;root\u0026gt;/ ▾ images/ logo.png  should become\n▾ \u0026lt;root\u0026gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you\u0026rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.\nCreate your Hugo configuration file #  Hugo can read your configuration as JSON, YAML or TOML. Hugo supports parameters custom configuration too. Refer to the Hugo configuration documentation for details.\nSet your configuration publish folder to _site #  The default is for Jekyll to publish to _site and for Hugo to publish to public. If, like me, you have _site mapped to a git submodule on the gh-pages branch, you\u0026rsquo;ll want to do one of two alternatives:\n  Change your submodule to point to map gh-pages to public instead of _site (recommended).\n git submodule deinit _site git rm _site git submodule add -b gh-pages git@github.com:your-username/your-repo.git public    Or, change the Hugo configuration to use _site instead of public.\n { .. \u0026quot;publishdir\u0026quot;: \u0026quot;_site\u0026quot;, .. }    Convert Jekyll templates to Hugo templates #  That\u0026rsquo;s the bulk of the work right here. The documentation is your friend. You should refer to Jekyll\u0026rsquo;s template documentation if you need to refresh your memory on how you built your blog and Hugo\u0026rsquo;s template to learn Hugo\u0026rsquo;s way.\nAs a single reference data point, converting my templates for heyitsalex.net took me no more than a few hours.\nConvert Jekyll plugins to Hugo shortcodes #  Jekyll has plugins; Hugo has shortcodes. It\u0026rsquo;s fairly trivial to do a port.\nImplementation #  As an example, I was using a custom image_tag plugin to generate figures with caption when running Jekyll. As I read about shortcodes, I found Hugo had a nice built-in shortcode that does exactly the same thing.\nJekyll\u0026rsquo;s plugin:\nmodule Jekyll class ImageTag \u0026lt; Liquid::Tag @url = nil @caption = nil @class = nil @link = nil // Patterns IMAGE_URL_WITH_CLASS_AND_CAPTION = IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK = /(\\w+)(\\s+)((https?:\\/\\/|\\/)(\\S+))(\\s+)\u0026quot;(.*?)\u0026quot;(\\s+)-\u0026gt;((https?:\\/\\/|\\/)(\\S+))(\\s*)/i IMAGE_URL_WITH_CAPTION = /((https?:\\/\\/|\\/)(\\S+))(\\s+)\u0026quot;(.*?)\u0026quot;/i IMAGE_URL_WITH_CLASS = /(\\w+)(\\s+)((https?:\\/\\/|\\/)(\\S+))/i IMAGE_URL = /((https?:\\/\\/|\\/)(\\S+))/i def initialize(tag_name, markup, tokens) super if markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK @class = $1 @url = $3 @caption = $7 @link = $9 elsif markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION @class = $1 @url = $3 @caption = $7 elsif markup =~ IMAGE_URL_WITH_CAPTION @url = $1 @caption = $5 elsif markup =~ IMAGE_URL_WITH_CLASS @class = $1 @url = $3 elsif markup =~ IMAGE_URL @url = $1 end end def render(context) if @class source = \u0026quot;\u0026lt;figure class='#{@class}'\u0026gt;\u0026quot; else source = \u0026quot;\u0026lt;figure\u0026gt;\u0026quot; end if @link source += \u0026quot;\u0026lt;a href=\\\u0026quot;#{@link}\\\u0026quot;\u0026gt;\u0026quot; end source += \u0026quot;\u0026lt;img src=\\\u0026quot;#{@url}\\\u0026quot;\u0026gt;\u0026quot; if @link source += \u0026quot;\u0026lt;/a\u0026gt;\u0026quot; end source += \u0026quot;\u0026lt;figcaption\u0026gt;#{@caption}\u0026lt;/figcaption\u0026gt;\u0026quot; if @caption source += \u0026quot;\u0026lt;/figure\u0026gt;\u0026quot; source end end end Liquid::Template.register_tag('image', Jekyll::ImageTag)  is written as this Hugo shortcode:\n\u0026lt;!-- image --\u0026gt; \u0026lt;figure {{ with .Get \u0026quot;class\u0026quot; }}class=\u0026quot;{{.}}\u0026quot;{{ end }}\u0026gt; {{ with .Get \u0026quot;link\u0026quot;}}\u0026lt;a href=\u0026quot;{{.}}\u0026quot;\u0026gt;{{ end }} \u0026lt;img src=\u0026quot;{{ .Get \u0026quot;src\u0026quot; }}\u0026quot; {{ if or (.Get \u0026quot;alt\u0026quot;) (.Get \u0026quot;caption\u0026quot;) }}alt=\u0026quot;{{ with .Get \u0026quot;alt\u0026quot;}}{{.}}{{else}}{{ .Get \u0026quot;caption\u0026quot; }}{{ end }}\u0026quot;{{ end }} /\u0026gt; {{ if .Get \u0026quot;link\u0026quot;}}\u0026lt;/a\u0026gt;{{ end }} {{ if or (or (.Get \u0026quot;title\u0026quot;) (.Get \u0026quot;caption\u0026quot;)) (.Get \u0026quot;attr\u0026quot;)}} \u0026lt;figcaption\u0026gt;{{ if isset .Params \u0026quot;title\u0026quot; }} {{ .Get \u0026quot;title\u0026quot; }}{{ end }} {{ if or (.Get \u0026quot;caption\u0026quot;) (.Get \u0026quot;attr\u0026quot;)}}\u0026lt;p\u0026gt; {{ .Get \u0026quot;caption\u0026quot; }} {{ with .Get \u0026quot;attrlink\u0026quot;}}\u0026lt;a href=\u0026quot;{{.}}\u0026quot;\u0026gt; {{ end }} {{ .Get \u0026quot;attr\u0026quot; }} {{ if .Get \u0026quot;attrlink\u0026quot;}}\u0026lt;/a\u0026gt; {{ end }} \u0026lt;/p\u0026gt; {{ end }} \u0026lt;/figcaption\u0026gt; {{ end }} \u0026lt;/figure\u0026gt; \u0026lt;!-- image --\u0026gt;  Usage #  I simply changed:\n{% image full http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg \u0026quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were \u0026quot;having fun\u0026quot; and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.\u0026quot; -\u0026gt;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/ %}  to this (this example uses a slightly extended version named fig, different than the built-in figure):\n{{% fig class=\u0026quot;full\u0026quot; src=\u0026quot;http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg\u0026quot; title=\u0026quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were having fun and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.\u0026quot; link=\u0026quot;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/\u0026quot; %}}  As a bonus, the shortcode named parameters are, arguably, more readable.\nFinishing touches #  Fix content #  Depending on the amount of customization that was done with each post with Jekyll, this step will require more or less effort. There are no hard and fast rules here except that hugo server --watch is your friend. Test your changes and fix errors as needed.\nClean up #  You\u0026rsquo;ll want to remove the Jekyll configuration at this point. If you have anything else that isn\u0026rsquo;t used, delete it.\nA practical example in a diff #   Hey, it\u0026rsquo;s Alex was migrated in less than a father-with-kids day from Jekyll to Hugo. You can see all the changes (and screw-ups) by looking at this diff.\n"},{"id":12,"href":"/docs/electricity/copmare-products/","title":"产品对比","section":"Electricity","content":"对比项目 #      常规录波器 电能质量监测1 结算计量装置2 模拟 PMU3 行波测距4     通信-网口 ≥4 有 2 RJ45 ≥4 ≥4   通信-串口 - 有(RS232/485) 2 RS485 - -   通信-USB 3 有  有 有   显示 - 无 或者 有(与按键交互) 有（LCD） 有(按键或触屏) -   按键 有（录波） 无 或者 有(控制显示) 有 有(控制显示) -   对时 IRIG-B IRIG-B IRIG-B IRIG-B(光或电) IRIG-B   采集频率 常用 12.8kHz A:≥25.6kHz; S:≥12.8kHz ≥12.8kHz ≥1kHz ≥1MHz5   开关量 常用 128（110/220DC） 有，未明确接入数量 有 ≥20（110/220DC） 有   模拟量 常用 96 有，未明确接入数量 有 常用 36 路（6U6I/板卡 x3） 有   模拟量电压 PT 接入 直接接入 或 互感器接入 互感器接入 直接接入 未明确   模拟量电流 CT 接入 直接接入 或 互感器接入 互感器接入 直接接入（1A/5A） 未明确   电源 110-220 D/AC 110-220 D/AC 100-240 D/AC 110-220 D/AC 110-220 D/AC   辅助电源 - - 100-240 D/AC - -   电池（全失压） - - 6V，≥1200mAh - -   电池（时钟） 有 有 3.6V，≥1200mAh 有 有   尺寸 4U 插卡 待明确 非 4U 插卡 4U 插卡 待明确    参考规范 #    Q GDW 10650.2-2017 电能质量监测技术规范第 2 部分：电能质量监测装置\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n 自主可控新一代变电站二次系统技术规范 装置类系列规范 6 结算计量装置（试行 V1.0）\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n 电力系统实时动态监测系统技术规范\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n 南方电网故障录波及行波測距装置技术规范\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  科汇-XC-2000输电线路故障行波测距装置\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "},{"id":13,"href":"/docs/electricity/power-quality-monitoring/","title":"电能质量监测","section":"Electricity","content":"规格描述 #  通过对引入的电压、电流信号进行分析处理，实现对电能质量指标进行监测的专用设备，包括电能质量监测终端和便携式电能质量分析仪.\n  监测装置分为 A 级和 S 级(根据测量方法及性能)：\n A 级用于需要进行精确测量的场合，如标准符合性检査、解决争议、电能质量合同仲裁等 S 级用于不需要较高精确度的应用场合，如电能质量调査统计、排除故障等。    监测装置的分类\n 按信号的接入方式分类  直接接入式：待测电压、电流信号直接接入监测装置，不需要中间设备； 间接接入式：待测电压、电流信号经传感器接入监测装置      按接入信号的类别分类\n 模拟接入式：待测电压、电流的模拟信号接入监测装置； 数字接入式：待测电压、电流的数字信号接入监测装置。    模拟量接入 #    电压信号输入回路\n 额定电压信号：  互感器接入法：(≈100/1.7)V 和 100V 直接接入法：220V 和 380V.   过压能力 4 倍额定电压允许 1s.    电流信号输入回路\n 接入范围：额定电流 1A 或 5A: 过载能力 1.5 倍额定电流连续，10 倍额定电流持续 1s。    数量量接入 #  接入合并单元（采样值至少采用 12800Hz 的采样频率进行同步采样，采样值同步精度应不大于 1us)\n触发 #  监测装置触发功能应符合以下要求：\n 具有电压、电流有效值和电能质量指标越限启动，以及暂态事件（包括电压暂升、暂降、短时 中断等）、瞬态事件的触发功能； 当任一指标达到设定的触发条件时，应同时触发该通道的所有电压、电流回路，并记录波形和 有效值。  对于波形记录，A级监测装置记录每周波应至少采样 512 点，S级应至少采样 256 点 对于精度要求较高的 A 级监测装置,采样频率至少要求 512*50=25600Hz.   应具有手动和定时触发录波功能 应具有远程触发录波功能  时钟同步 #   授时数据接口,对时绝对精度：±1ms,时钟守时精度±1s/24h 应采用 IRIG-B 码方式对时。  数据通信 #    监测终端\n 具备以太网接口，可具有 RS232/485、USB 等接口 宜提供开关量输入和开关量输出接口，用于外部触发记录和越限告警输出；    便携式分析仪\n 便携式电能质量分析仪可通过存储卡或以太网、 USB 等接口输出数据。    尺寸 #  监测终端外形尺寸应符合宽度为 482.6mm,高度不大于 177mm,深度不大于 300mm;\n或者宽度不大于 300mm,高度不大于 360mm,深度不大于 320mm.\n显示按键 #    当配有显示时，监测终端显示屏应选用宽温度范围.\n  当配有按键时，按键应设置于监测装置面板正面，操作响应时间不大于 1s,无卡 死或接触不良现象，各部件应紧固。\n  可理解不需要显示与按键? \\newpage\n"},{"id":14,"href":"/docs/electricity/settlement-measurement/","title":"结算计量装置","section":"Electricity","content":"触发 #  任一指标达到设定的触发条件时，应同时触发所有电压、电流回路， 并记录波形和有效值。对于波形记录，每周波应至少采样 256 点\n采样频率至少为 256*50=12800Hz\n尺寸 #  外形尺寸规格： 290mm（高）×170mm（宽）×85mm（厚）；\n 显示 #  采用 LCD 显示信息，液晶屏可视尺寸为 85mm（长）×50mm（宽）\n按键 #  按键操作响应时间不大于 1s，无卡死或接触不良现象，各部件应紧固.\n输出接口 #   电能量脉冲输出、功能测试接口、报警输出、RS485 接口、调制型红外接口要求 两个 RJ45 接口，两个 RS485 接口 (宜)RS485 授时接口，采用 IRIG-B（DC)码方式与站内授时源对时.  辅助电源接口 #   辅助电源供电电压为（100～240）V 交、直流自适应 线路和辅助电源两种供电方式应能实现无间断自动转换  电池 #   抄表及全失压电池,输出电压为 6V，额定容量≥1200mAh 时钟电池,标称电压 3.6V，额定容量≥1200mAh，不可更换  测量功能 #  电压测量及电流测量(经互感器接入)\n 电压测量范围： 0.05U nom ~1.5U nom ，测量误差（引用误差)不超过±0.2% 电流（含零线)测量范围：I min ~1.2I max , I min ~0.05I tr 时测量误差（引用误差)不超过±1%，0.05I tr 及以上测量误差（引用误差)不超过±0.5%；  参考 #   自主可控新一代变电站二次系统技术规范 装置类系列规范 6 结算计量装置 三相智能电能表技术规范  \\newpage\n"},{"id":15,"href":"/docs/electricity/xing-bo-ce-ju/","title":"行波测距","section":"Electricity","content":"产品描述 #  500kV 及以上系统的交流线路、220kV 长度超过 50kM 或多单位维护的交流线路应配置集中式行波测距装置；其它 220kV 巡线困难的交流线路宜装设行波测距装置。\n对时 #  有对时功能，对时误差不大于 1μs。\n通信接口 #   装置应具备至少 4 个独立的 10M 及以上以太网接口。 应具备打印接口。 宜具备 USB 转存接口。  无源节点 #  当地告警信号应不少于 3 对硬接点输出，分别为装置起动、装置失电、装置故障。\n信号接入 #   对交流线路，行波测距装置可直接接入 CT 二次侧、PT 二次侧或在互感器接地回路经专用互感器提取行波信号； 对直流线路，行波测距装置通过测量直流耦合电容器接地引线电流的专用互感器提取行波信号。  采集频率 #  装置采样频率不小于 1MHz.\n"},{"id":16,"href":"/docs/electricity/edge-gateway/","title":"边缘网关","section":"Electricity","content":"边缘网关 edge gateway #  一种网关设备，部署在变电站、配电站所/台区/杆塔、分布式新能源等新兴市场主体的并网点等位置，负责采集本地电网运行数据，上送边缘集群，并实现电网运行方式切换、调频/调峰等指令操作，具备边缘计算和云边协同应用功能，支撑调度运行和市场运营。\n边缘网关根据应用场景和功能性能差异分为 I 型边缘网关、II 型边缘网关和 III 型边缘网关。\n I 型边缘网关指部署在变电站的智能远动机。 II 型边缘网关具备交直流模拟量测量及开关量输入输出功能，应用于配电站所/台区/杆塔、分布式新能源、储能、电动汽车充电设施等场合。 III 型边缘网关从接入对象的监控系统（本地/平台）采集数据，应用于综合能源园区、虚拟电厂等场合。  接口要求 #  接口应满足以下要求：\n远传 2/3/4G 5G #   有无线远传需求的边缘网关，应具备 1 路无线公网/专网远程通信接口，应支持 2/3/4G，宜支持 5G。  LNA 2(100/1000Mbit/s) #   应具备至少 2 路以太网接口，传输速率选用 100/1000Mbit/s 全双工。  console #   应至少具备 1 路本地维护接口，可支持 UART、ETH，其中 UART 支持速率 38400bps 或以上，通过本地维护接口可设置网关参数，进行软件升级等。  HPLC #   可连接 HPLC 模块、微功率模块或双模模块。  UART(4RS485,2RS232) #   应具备至少 4 路 RS-485，2 路 RS-232/RS-485 可切换串口，串口速率可选用 1200 bps、2400 bps、4800 bps、9600 bps、19200 bps、38400bps 等。  AD(3U3I) #   II 型边缘网关应具备至少 3 路交流电压输入接口，输入额定值为 220V/320V，或 57.7V/100V，输入范围（0-2）Un。 II 型边缘网关应具备至少 3 路交流电流输入接口，输入额定值 1.5A，输入电流范围（0-4）In，能承受 6 倍额定电流过载。  无线接入 #   应用于无线物联网接入场景的边缘网关装置需具备无线通信接口，可采用蓝牙、Zigbee、WiFi、LoRa/LoRaWAN、RF 等协议接口。  "},{"id":17,"href":"/posts/tan-zhong-he/","title":"碳中和","section":"Blog","content":"《蒙特利尔协议》 #  早在 1985 年，全球主要工业国家几乎一个不少的，共同签订了一个几乎是踩着生死时间线，把人类从团灭命运边缘拯救回来的国际协议：《蒙特利尔协议》.\n这个协议旨在保护地球臭氧层，并且尽一切办法阻止南极臭氧层空洞的扩大。\n原因只有一个： 如果人类不立刻开始削减氟利昂产量，以及限制氟利昂的使用，那么人类文明的终点，大概就在 2020 至 2050 年之间！\n氟利昂 #  氟利昂这玩意虽然稳定，但是它稳定到了只跟臭氧发生反应！\n而且 1 个氟利昂分子在完成反应之前，至少会连续干掉 10W 个以上的臭氧分子！在这之前的 60 年内(1920-1980，人类已经共计生产氟利昂超过 100 万吨。\n臭氧层的主要作用，就是大规模拦截紫外线短波。臭氧层一旦消失，短波辐射到达地表，地球瞬间就会变成一个超大号微波炉\n现在每年 7~8 月南极臭氧层空洞开始扩大，10 月抵达巅峰，然后开始收缩。 而且就在去年，也就是 2021 年！ 南极臭氧层空洞达到了历史极值，2400W 平方公里，比南极洲还大！\n南极的空洞虽然随着氟利昂的禁用会慢慢恢复，但也存在致命 BUG，那就是它跟普通地区的臭氧层不一样，它是越冷越大，这是因为大气冰晶造成的。\n极地区域因为高寒，所以冬季会在高空云层形成大量固态冰晶，这些冰晶会释放空气中的氯基气体，而氯基气体会大规模中和臭氧\n碳中和 #  很多时候，决定经济行为的根源，往往不会是经济问题本身！\n"},{"id":18,"href":"/posts/mind-change-body/","title":"身体竟然随心念改变","section":"Blog","content":"我们的身体拥有非常强大的自我修复能力、自我疗愈能力、自我适应能力、自我觉醒能力、自我救赎能力。\n就是人对自己的发自内心的相信。\n心理科学 #  美国著名心理学专业刊物《心理科学》，在前不久公布了一项很有趣的实验成果：通过改变一个人内心对自身视力的预期，能改变他真实的视力水平。\n普通的视力表是上大下小，于是被测者就有一个心理预期，越往下就会越看不见。而在这项实验中，实验者将视力表的字幕设计为上小下大。被测者的心理预期被扭转过来，越往下，应该看得清楚。\n https://mmbiz.qpic.cn/mmbiz_jpg/IIMKg13LHKibretj7loHtP6vBxMiaXsWfOicwnuJl1PIuNGUZmiaM0lsD89DsecKVUPHnvTYheX0QNVUvEBLgHTOqA/640?wx_fmt=jpeg\u0026wxfrom=5\u0026wx_lazy=1\u0026wx_co=1\n实验结果惊人，被测者的视力水平有了大幅提高，在普通视力表中看不清的字母现在也能看清楚了。\n人的心与身之间，意念与躯体之间，存在着奇异而隐秘的联系。\n如果相信它会影响你，它就会；如果你不相信，它就不会。\n倒时钟 #  好莱坞曾拍一部名为《倒时钟(Counter Clockwise) 》电影，影片基于一个真实的实验案例。\n一位名为艾伦·朗格的实验心理学教授在 1979 年做过一个实验：\n 在美国匹兹堡的一个修道院中，她精心搭建了一个“时空胶囊”，将它布置得和 20 年前一模一样。 她邀请了 16 位七八十岁的老人，随机分为 8 人一组。 一组人让他们生活在时空胶囊里一个星期。在这一周内，人们沉浸在 1959 年的环境里，听上世纪 50 年代的音乐，看 50 年代的电影和情景喜剧，读 50 年代的报纸和杂志，讨论美国第一次发射人造卫星等 50 年代的国际时事等；他们需要像在 20 年前一样打理生活的一切，从起床、穿衣服到收拾碗筷以及走路。 而另一组，则是在完全相同的饮食作息条件下，用怀旧的方式回忆和谈论 1959 年发生的事。\n 实验的结果是，两组老人的身体素质都有了明显改善。\n而“活”在 20 年前的老人们进步更加惊人，他们手脚更加敏捷，智力测验中得分更高。甚至局外人，在看到他们实验前后的照片，几乎不敢相信自己的眼睛。\n生理会引起心里的变化，心念更能导致生理的改变。\n最后 #  很多人固执地认为衰老和人体机能减弱有着必然的联系，这种思维定势极具杀伤力。\n"},{"id":19,"href":"/docs/project/e-commerce/shopee-instruction/","title":"Shopee","section":"E Commerce","content":"分销下单 铺货 #  汇率 #   https://themoneyconverter.com/CN\n1 CNY = 4.4299 TWD 1 CNY = 0.66289 MYR\n发货 #  注意事项 #  分单 #  快递单号+此快递包裹需分单发货\n"},{"id":20,"href":"/posts/gaokao-fangfalun/","title":"高考方法论","section":"Blog","content":"高考移民-华侨生联考 #  希腊 #  一套房产（175-210 万元人民币，约合 25-30 万欧元），即可获赠全家三代人的希腊 PR（绿卡）身份.\n希腊没有移民监要求，办好绿卡后，你的主业仍可以在中国，即使不出去，也不影响你永续绿卡身份。\n有了这张绿卡，你的孩子就具备在国内一线城市上国际学校的资格，这些学校的 IB 课程、A-Level 课程，直接与英美教育体制接轨，孩子在国内也可以接受良好的中西融合教育，将来报考牛剑、英国 G5 或美国名校会更容易。\n华侨生联考，国内全日制本科稳进（91.5%直接录取，未达录取分数线的也有预科保底，无需复读重考），“逆袭”进清华、北大也不是梦！\n移民身份 #  高考加分 #  港澳台联考 #  如何消除 #  消除高考政策信息差 #   提前招生考试  消除学习工具信息差 #   费曼学习法  消除学习内容信息差 #   高考资料  "},{"id":21,"href":"/docs/invest/Archive/money-credit-debt/","title":"货币、信贷和债务是如何运作的","section":"Archive","content":"货币、信贷和债务是如何运作的 #  Excerpt #  《原则 变化中的世界秩序》\n"},{"id":22,"href":"/posts/du-shu-yu-huan-jing/","title":"读书与环境","section":"Blog","content":"多读一年书到底能带来多少收入？ #  获奖人乔舒亚·安格里斯特和克鲁格的研究:\n“多上一年学，本身对一个人日后的收入水平就是有正向影响的，这一影响不是由其他因素造成的，而纯粹是由教育带来的回报。接受 12 年教育的人比接受 11 年教育的人的收入增加 12%，接受 16 年教育的人比接受 11 年教育的人收入高出 65%。”\n上重点大学是不是比上普通大学， 回报更高？ #  给定学生的大学申请数量以及所申请大学的选拔水平，同时控制其他一些反映个人能力和家庭背景的控制变量，选择藤校或公立大学的学生在未来收入上并无显著的差别。\n上重点中学，是不是比上普通中学，回报更高？ #  进入这些精英中学学习，相比于在普通公立高中学习，并没有使学生取得更为优秀的大学入学资格考试成绩。\n最终 #  读书本身，对提高一个人的见识、格局，有极大的帮助。而当一个人的见识、格局提高了，还愁赚不到钱吗？\n[[https://mp.weixin.qq.com/s/qXiUKydkG0fH9lvGD2Zxzg][点击此处请看原文]] "},{"id":23,"href":"/docs/emerging/","title":"Emerging","section":"Docs","content":"  Inbox  Domain Register State \u0026ldquo;DONE\u0026rdquo; from [2022-03-12 周六 16:00] metaverse #   Blockchain  Chainlink Chainlink # 比特币、以太坊这样的去中心化系统提供了最小化信任特性，使得它们成为全球化、低摩擦的协作平台。但是归根到底，它们都是一个封闭的系统，其最小化信任特性也仅限于系统内部，它们对区块链外部数据是不提供保证的。 白皮书的介绍，Chainlink 通过使用 API 将链上和链外联系起来。它通过获取链上资源（如以太坊、比特币和 Hyperledger 等区块链），并通过 API 将其连接到链下资源（如市场数据、银行支付、零售支付、后端系统、事件数据等）来实现链下数据与链上智能合约的交互。 通过引入多个节点以提供“去中心化”特性，同时分发代币激励去引导众多节点诚实地执行工作 官网： http://www.smartcontract.com/link 白皮书： https://link.smartcontract.com/whitepaper Create NFTs Reference # NFT制作与OpenSea部署教程 Resource # NFT Brownie Mix # 工作代码库，有非常多样板代码。 Metamask # Infura # Infura 是出色的开放以太坊节点，它免费提供了标准的 RPC API 可供开发者 调用。除了支持以太坊，Infura 还提供 IPFS 网关和 API，并且提供多个 数字货币交易所的行情信息 API。 为开发人员提供了一种不必运行全节点就可以连接以太坊网络的方法 Infura 是一种 IaaS（Infrastructure as a Service）产品，目的是为了降低访问以太坊数据的门槛。可以让你的 dApp 快速接入以太坊的平台，不需要本地运行以太坊节点。 Infura 是由唯一的一家供应商运营的——以太坊开发工作室 Consensys——它依赖于亚马逊托管的云服务器。 Install # eth-brownie # git clone https://github.com/PatrickAlphaC/nft-mix cd nft-mix pip install eth-brownie # apt install npm npm install -g ganache-cli .   "},{"id":24,"href":"/docs/emerging/inbox/","title":"Inbox","section":"Emerging","content":"  Domain Register  State \u0026ldquo;DONE\u0026rdquo; from [2022-03-12 周六 16:00] metaverse #   "},{"id":25,"href":"/docs/emerging/inbox/domain-register/","title":"Domain Register","section":"Inbox","content":" State \u0026ldquo;DONE\u0026rdquo; from [2022-03-12 周六 16:00]  metaverse #  "},{"id":26,"href":"/docs/emerging/blockchain/","title":"Blockchain","section":"Emerging","content":"  Chainlink  Chainlink # 比特币、以太坊这样的去中心化系统提供了最小化信任特性，使得它们成为全球化、低摩擦的协作平台。但是归根到底，它们都是一个封闭的系统，其最小化信任特性也仅限于系统内部，它们对区块链外部数据是不提供保证的。 白皮书的介绍，Chainlink 通过使用 API 将链上和链外联系起来。它通过获取链上资源（如以太坊、比特币和 Hyperledger 等区块链），并通过 API 将其连接到链下资源（如市场数据、银行支付、零售支付、后端系统、事件数据等）来实现链下数据与链上智能合约的交互。 通过引入多个节点以提供“去中心化”特性，同时分发代币激励去引导众多节点诚实地执行工作 官网： http://www.smartcontract.com/link 白皮书： https://link.smartcontract.com/whitepaper   Create NFTs  Reference # NFT制作与OpenSea部署教程 Resource # NFT Brownie Mix # 工作代码库，有非常多样板代码。 Metamask # Infura # Infura 是出色的开放以太坊节点，它免费提供了标准的 RPC API 可供开发者 调用。除了支持以太坊，Infura 还提供 IPFS 网关和 API，并且提供多个 数字货币交易所的行情信息 API。 为开发人员提供了一种不必运行全节点就可以连接以太坊网络的方法 Infura 是一种 IaaS（Infrastructure as a Service）产品，目的是为了降低访问以太坊数据的门槛。可以让你的 dApp 快速接入以太坊的平台，不需要本地运行以太坊节点。 Infura 是由唯一的一家供应商运营的——以太坊开发工作室 Consensys——它依赖于亚马逊托管的云服务器。 Install # eth-brownie # git clone https://github.com/PatrickAlphaC/nft-mix cd nft-mix pip install eth-brownie # apt install npm npm install -g ganache-cli .env # export PRIVATE_KEY=YOUR_KEY_HERE export WEB3_INFURA_PROJECT_ID=YOUR_PROJECT_ID_HERE your_key_here PRIVATE_KEY:(MetaMask: Account Details \u0026ndash;\u0026gt; Export Private Key)   ERC  ERC # ERC 是 Ethereum Request for Comments（以太坊征求意见提案）的缩写,，代表以太坊已正式化的提案. ERC-721 # NFT 是一种区块链代币标准,遵守的代币标准 ERC721. ERC-20 # “可置换”代币，这意味着那些代币是可被替换的 (replaceable) 和可互相兑换 (interchangeable) ERC-1155 # 在一定程度上融合了 ERC-20 和 ERC-721 的功能。   ETH  简述 # 智能合约平台 # 以太坊是第一个实现了虚拟机的区块链，因此为智能合约 - Smart Contract - 的运行提供了良好的支持环境。也正因为这个原因，以太坊被称为区块链 2.0，以区别于比特币代表的以数字加密货币为核心特征的区块链 1.0。 将智能合约理解为机器之间的合同约定，在满足一定条件时自动 执行约定好的逻辑，例如在保险理赔流程中，如果理赔条件满足就自动 将赔偿金释放给出险人，这个流程就可以使用智能合约来实现。 JSON RPC # 去中心化应用（DApp）   NFT  NFT # NFTs (Non-Fungible Tokens，不可置换代币) 可以用一个词来总结：唯一性。这些是部署在区块链上的智能合约，代表着某种东西的唯一性。 NFT 是区块链的一种应用，最大特点就是把网址写入区块链。 NFT 包含的网址是没法改的，然后可以通过区块链的买卖机制，跟某一个数字钱包相关联。 如果某个区块在你的数字钱包名下，该区块所包含的网址自然也会在你的名下。所以，NFT 很适合作为 *网址的所有权证书*。 Reference # 一文读懂NFT：全面解析NFT发展简史、价值及未来   Filecoin  去中心化储存平台   IPFS and Filecoin  区别 # IPFS addresses and moves content; Filecoin is the missing incentive layer。 IPFS 主要负责 P2P 网络中的内容寻值和内容传输，而 Filecoin 是内容永久存储的激励层(运行在ipfs上)，它们之间是相互补充的关系。 Filecoin与IPFS是两个项目: IPFS是底层协议，并没有ICO. Filecoin进行了ICO，代币名称为FIL。 Filecoin的代币总量20亿，70%用于奖励矿工.   IPFS  去中心化储存平台   "},{"id":27,"href":"/docs/emerging/blockchain/chainlink/","title":"Chainlink","section":"Blockchain","content":"Chainlink #  比特币、以太坊这样的去中心化系统提供了最小化信任特性，使得它们成为全球化、低摩擦的协作平台。但是归根到底，它们都是一个封闭的系统，其最小化信任特性也仅限于系统内部，它们对区块链外部数据是不提供保证的。\n白皮书的介绍，Chainlink 通过使用 API 将链上和链外联系起来。它通过获取链上资源（如以太坊、比特币和 Hyperledger 等区块链），并通过 API 将其连接到链下资源（如市场数据、银行支付、零售支付、后端系统、事件数据等）来实现链下数据与链上智能合约的交互。\n通过引入多个节点以提供“去中心化”特性，同时分发代币激励去引导众多节点诚实地执行工作\n官网： http://www.smartcontract.com/link\n白皮书： https://link.smartcontract.com/whitepaper\n"},{"id":28,"href":"/docs/emerging/blockchain/create-nfts/","title":"Create NFTs","section":"Blockchain","content":"Reference #   NFT制作与OpenSea部署教程\nResource #  NFT Brownie Mix #  工作代码库，有非常多样板代码。\nMetamask #  Infura #  Infura 是出色的开放以太坊节点，它免费提供了标准的 RPC API 可供开发者 调用。除了支持以太坊，Infura 还提供 IPFS 网关和 API，并且提供多个 数字货币交易所的行情信息 API。\n为开发人员提供了一种不必运行全节点就可以连接以太坊网络的方法\nInfura 是一种 IaaS（Infrastructure as a Service）产品，目的是为了降低访问以太坊数据的门槛。可以让你的 dApp 快速接入以太坊的平台，不需要本地运行以太坊节点。\nInfura 是由唯一的一家供应商运营的——以太坊开发工作室 Consensys——它依赖于亚马逊托管的云服务器。\nInstall #  eth-brownie #  git clone https://github.com/PatrickAlphaC/nft-mix cd nft-mix pip install eth-brownie # apt install npm npm install -g ganache-cli .env #  export PRIVATE_KEY=YOUR_KEY_HERE export WEB3_INFURA_PROJECT_ID=YOUR_PROJECT_ID_HERE   your_key_here PRIVATE_KEY:(MetaMask: Account Details \u0026ndash;\u0026gt; Export Private Key)\n  your_project_id_here Web3 Infura Project ID\n  brownie run #  # deploy NFT contract to Rinkeby blockchain. brownie run scripts/simple_collectible/deploy_simple.py --network rinkeby # create collect brownie run scripts/simple_collectible/create_collectible.py --network rinkeby ERC721 #  // SPDX-License-Identifier: MIT pragma solidity 0.6.6; // transfer 意味着把我们的代币转移给新用户， import \u0026#34;@openzeppelin/contracts/token/ERC721/ERC721.sol\u0026#34;; // 承继ERC721 代币合约功能 contract SimpleCollectible is ERC721 { uint256 public tokenCounter; // 部署合约时，constructor会被自动调用. 构造函数只需要取一个名字和一个符号, 如\u0026#34;Dogie\u0026#34;和\u0026#34;DOG\u0026#34;  constructor () public ERC721 (\u0026#34;Dogie\u0026#34;, \u0026#34;DOG\u0026#34;){ // 计数我们创建了多少这个类型的 NFT  tokenCounter = 0; } // 也可以用 createCollectible 函数创建一个 NFT。这就是在我们的 create_collectible.py 脚本里调取的函数。  function createCollectible(string memory tokenURI) public returns (uint256) { uint256 newItemId = tokenCounter; // safeMint表示创建新的代币， NFT。并把它分给任何调用了 createdCollectible的账户，即 msg.sender，且会有一个从 tokenCounter派生的 newItemId  _safeMint(msg.sender, newItemId); _setTokenURI(newItemId, tokenURI); tokenCounter = tokenCounter + 1; return newItemId; } } TokenURI #  要一种轻量方法储存 NFT 的属性信息——这就是需要 tokenURI 和元数据的地方。\n一个 NFT 上的 tokenURI 是能展示这个代币的唯一标识符。\n一个 URI 可以是 HTTPS 上的 API 调用、一个 IPFS 的哈希、或任何其他代表唯一的东西。\n{ \u0026#34;name\u0026#34;: \u0026#34;name\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;description\u0026#34;, \u0026#34;image\u0026#34;: \u0026#34;https://ipfs.io/ipfs/QmTgqnhFBMkfT9s8PHKcdXBn1f5bG3Q5hmBaR4U6hoTvb1?filename=Chainlink_Elf.png\u0026#34;, \u0026#34;attributes\u0026#34;: [ { \u0026#34;trait_type\u0026#34;: \u0026#34;trait\u0026#34;, \u0026#34;value\u0026#34;: 100 } ] } 我们专注在链上元数据上，这样我们才可以对我们的 NFT 进行编程，使它们互相交互。 尽管如此，我们仍然需要 image 部分的链下元数据.\nDeploy on Opensea #  动态 NFT 是那种随时间变化的，或具有我们可以用来互相交互的链上功能的 NFT。这些 NFT 给了我们无限制的自定义空间去制作整个游戏、构建世界、以及某种交互艺术。\n  确认你的 metamask 里有足够的 ETH 和 LINK 测试币, 然后：\n# 这里的收藏品是从 Chainlink VRF (Virtual Routing and Forwarding，虚拟路由和转发) 返回的一个随机犬种 brownie run scripts/advanced_collectible/deploy_advanced.py --network rinkeby brownie run scripts/advanced_collectible/create_collectible.py --network rinkeby # 创建它的元数据 brownie run scripts/advanced_collectible/create_metadata.py --network rinkeby   选择性地上载这个数据到 IPFS，这样我们就会获得一个 tokenURI.\n如这个样本 tokenURI： https://ipfs.io/ipfs/Qmd9MCGtdVz2miNumBHDbvj8bigSgTwnr4SbyH6DNnpWdt?filename=1-PUG.json\n  set_tokenuri.py\nbrownie run scripts/advanced_collectible/set_tokenuri.py --network rinkeby # ----------------- # output such: Running \u0026#39;scripts/advanced_collectible/set_tokenuri.py::main\u0026#39;... Working on rinkeby Transaction sent: 0x8a83a446c306d6255952880c0ca35fa420248a84ba7484c3798d8bbad421f88e Gas price: 1.0 gwei Gas limit: 44601 Nonce: 354 AdvancedCollectible.setTokenURI confirmed - Block: 8331653 Gas used: 40547 (90.91%) Awesome! You can view your NFT at https://testnets.opensea.io/assets/0x679c5f9adC630663a6e63Fa27153B215fe021b34/0 Please give up to 20 minutes, and hit the \u0026#34;refresh metadata\u0026#34; button 点击里面的链接看看它在 Opensea 上怎么样的。(可能需要点 refresh metadata ，等上几分钟)\n  "},{"id":29,"href":"/docs/emerging/blockchain/erc/","title":"ERC","section":"Blockchain","content":"ERC #  ERC 是 Ethereum Request for Comments（以太坊征求意见提案）的缩写,，代表以太坊已正式化的提案.\nERC-721 #  NFT 是一种区块链代币标准,遵守的代币标准 ERC721.\nERC-20 #  “可置换”代币，这意味着那些代币是可被替换的 (replaceable) 和可互相兑换 (interchangeable)\nERC-1155 #  在一定程度上融合了 ERC-20 和 ERC-721 的功能。\n"},{"id":30,"href":"/docs/emerging/blockchain/ethereum/","title":"ETH","section":"Blockchain","content":"简述 #  智能合约平台 #  以太坊是第一个实现了虚拟机的区块链，因此为智能合约 - Smart Contract - 的运行提供了良好的支持环境。也正因为这个原因，以太坊被称为区块链 2.0，以区别于比特币代表的以数字加密货币为核心特征的区块链 1.0。\n将智能合约理解为机器之间的合同约定，在满足一定条件时自动 执行约定好的逻辑，例如在保险理赔流程中，如果理赔条件满足就自动 将赔偿金释放给出险人，这个流程就可以使用智能合约来实现。\nJSON RPC #  去中心化应用（DApp）\n "},{"id":31,"href":"/docs/emerging/blockchain/nft/","title":"NFT","section":"Blockchain","content":"NFT #  NFTs (Non-Fungible Tokens，不可置换代币) 可以用一个词来总结：唯一性。这些是部署在区块链上的智能合约，代表着某种东西的唯一性。\nNFT 是区块链的一种应用，最大特点就是把网址写入区块链。\nNFT 包含的网址是没法改的，然后可以通过区块链的买卖机制，跟某一个数字钱包相关联。\n如果某个区块在你的数字钱包名下，该区块所包含的网址自然也会在你的名下。所以，NFT 很适合作为 *网址的所有权证书*。\nReference #    一文读懂NFT：全面解析NFT发展简史、价值及未来  "},{"id":32,"href":"/docs/emerging/blockchain/filecoin/","title":"Filecoin","section":"Blockchain","content":"Filecoin #  Filecoin 是一个去中心化的存储网络，能将海量用户的闲散存储资源充分利用起来，从而构建一套超低成本的可靠存储系统。\n没有中心，所以会用到区块链技术.\n一般区块链使用的是算力挖矿的工作量证明（Proof-of-Work mining），而 Filecoin 使用的是存储工作量证明(Proof-of-Storage)。\nFilecoin 架构 #  我们可以把 Filecoin 简化为两层:\n 一个是区块链，主要是记录全网状态（一个去中心化的状态机），包括所有钱包账户和余额，市场订单匹配记录。 一个是存储的解决方案，主要包括副本策略（纠删码，多副本），端到端加密，存储时间和续费策略，存储市场匹配等。  它主要包括 4 种角色：\n 存储矿工（Storage miners）： 将自己的磁盘抵押出来，提供存储服务，类似云厂商的对象存储 检索矿工（Retrieval miners）：可以帮助用户快速的检索到内容，类似于传统意义的 CDN 存储客户端（Storage clients）：能够上传内容到 Filecoin，类似对象存储上传客户端 检索客户端（Retrieval clients）：能够从 Filecin 检索到内容，类似对象存储下载客户端  市场 #  Filecoin 一共有两个市场:\n 存储市场 检索市场  只有存储矿工才有系统的奖励，才真正属于IPFS的挖矿(系统的奖励).\n挖矿 #  挖矿就是在 Filecoin 网络中获取虚拟货币（FIL），主要可以通过以下途径：\n 成为存储矿工，在市场中通过报价的方式出租存储空间，当匹配成功，将获取相应报酬 成为检索矿工，帮助内容下载客户端下载内容 成为数据修复矿工，帮助修复丢失或损坏的数据  "},{"id":33,"href":"/docs/emerging/blockchain/ipfs-and-filecoin/","title":"IPFS and Filecoin","section":"Blockchain","content":"区别 #   IPFS addresses and moves content; Filecoin is the missing incentive layer。\n IPFS 主要负责 P2P 网络中的内容寻值和内容传输，而 Filecoin 是内容永久存储的激励层(运行在ipfs上)，它们之间是相互补充的关系。\nFilecoin与IPFS是两个项目:\n IPFS是底层协议，并没有ICO. Filecoin进行了ICO，代币名称为FIL。  Filecoin的代币总量20亿，70%用于奖励矿工.    "},{"id":34,"href":"/docs/emerging/blockchain/ipfs/","title":"IPFS","section":"Blockchain","content":"IPFS #  IPFS 全称为 Inter Planetary File System. 星际文件系统.\n 用于存储和访问文件、网站、应用程序和数据的分布式文件系统。 “一个点对点的超媒体传输协议”.点对点的分布式文件存储系统. 它的目标是成为更快、更安全、更开放的下一代互联网,用来替代传统中心化的服务器模式. 所有的IPFS节点组成一个分布式网络，每个节点都可以存储文件. 用户可以从IPFS构建的网络中以DHT(Distributed Hash Table，分布式哈希表) 的方式获取文件.  工作原理 #  IPFS 可以从本质上改变网络数据的分发机制\n 每个文件及其中的所有块都被赋予一个称为加密散列的唯一指纹。 IPFS 通过网络删除重复具有相同哈希值的文件，通过计算是可以判断哪些文件是冗余重复的。并跟踪每个文件的版本历史记录。 每个网络节点只存储它感兴趣的内容，以及一些索引信息，有助于弄清楚谁在存储什么。 查找文件时，你通过文件的哈希值就可以在网络查找到储存改文件的节点，找到想要的文件。 使用称为 IPNS（去中心化命名系统），每个文件都可以被协作命名为易读的名字。通过搜索，就能很容易地找到想要查看的文件。  从 IPFS 的介绍可以看出， IPFS 设想的是让所有的网络终端节点不仅仅只充当 Browser 或 Client 的角色，其实人人都可以作为这个网络的运营者，人人都可以是服务器。\n基本使用 #  Install \u0026amp; use #  参考官网： https://ipfs.io/docs/install 使用参考： https://ipfs.io/docs/getting-started\nwget https://dist.ipfs.io/go-ipfs/v0.4.14/go-ipfs_v0.4.14_linux-amd64.tar.gz tar xvfz go-ipfs_v0.4.14_linux-amd64.tar.gz cd go-ipfs ./install.sh # test ipfs help # start ipfs init # start daemon to keep connection with internet ipfs daemon \u0026amp; # show point connectted on IPFS ipfs swarm peers Practice #  上传GitHub Pages主页到IPFS\ngit clone \u0026lt;git-pages-repo\u0026gt; ipfs add -r \u0026lt;git-gages-repo\u0026gt; # 以下输入会生成哈希码,标识了文件在网路上的位置 # 只要IPFS进程还开启着，数据就不会被垃圾回收 ipfs pin add -r \u0026lt;your-hash\u0026gt; # 过网址访问个人主页 https://gateway.ipfs.io/ipfs/\u0026lt;your-hash\u0026gt; IPNS #  一个命名系统，它可以把文件的哈希值命名为一个简单易懂的名字。\nIPFS系统有版本管理系统，并且每一个节点上都有所存文件的哈希值构成的哈希表\nReference #    IPFS——它能取代 HTTP 协议？  "},{"id":35,"href":"/docs/project/shiti/mi-da-yin-yue/","title":"MiDaYinYue","section":"Shiti","content":"商场唱歌厅 - 咪哒音乐\n"},{"id":36,"href":"/posts/medidation-instruction/","title":"Medidation","section":"Blog","content":"Instruction #  Meditation is a practice in which an individual uses a technique – such as mindfulness, or focusing the mind on a particular object, thought, or activity – to train attention and awareness, and achieve a mentally clear and emotionally calm and stable state.\nMindfulness is the practice of purposely bringing one\u0026rsquo;s attention in the present moment without evaluation,a skill one develops through meditation or other training Refine every day.\n"},{"id":37,"href":"/posts/securities-history-back/","title":"证券历史回溯","section":"Blog","content":"证券历史大事记 #  Table 1:\r证券历史大事记\r\r   时间 大事记 备注 阶段     1984-11-14 上海飞乐音响公司“小飞乐”股票发行 改革开放后发行的第一只股票 股民 1.0 时代（1984-1990）   1985 股票横空出世在上海滩  股民代表：个体户（暴发户）   1988-7-18 上海万国证券公司成立 第一家专业证券公司    1990-12-19 ： 上海证券交易所 正式成立     1991-7-11 上海证券交易所推出股票账户，逐渐取代股东名卡     1992-3-2 上海股票认购证第一次摇号  股民 2.0 时代（1992-2000）   1993-5-21 上海证券交易所放开了上市股票的价格限制，并实行“T+0”交易规则，引发股市暴涨  股民代表：个体工商户、上市公司的内部职工等   1992-10-12 中国证券监督管理委员会成立 中国的股票交易走上了正规化和法制化的轨道    1999-5-19 《人民日报》发表特约评论员文章 “5·19 行情”启动    1999-7-1 《证券法》正式实施 证券市场集中统一的监管体制建立    2000-12-4  著名的国有股减持圈钱再次提起,股市应声下跌 3 个月。 股民 3.0 时代（2000-2006）   2001-6-12 国务院《减持国有股筹资社会保障资金管理暂行办法》 正式宣布国有股减持开始。股市自此开始暴跌，一路阴跌近 5 年 股民代表：公司白领、银行职员成为新晋选手   2004-1-31 国务院《关于推进资本市场改革开放和稳步发展的若干意见》被称为“国九条” “大力发展资本市场是一项重要的战略任务，      对实现本世纪头二十年国民经济翻两番的战略目标，具有战略意义。”    2005-4-29 证监会《关于上市公司股权分置改革试点有关问题的通知》 股市自此开始暴跌，一路阴跌近 5 年    2005-6-6 证监会《上市公司回购社会公众股份管理办法(试行)》 上证指数跌破 1000 点大关，最低见 998.23 点。      证监会出台大量政策恢复股市机能     证监会《国有股股权分置改革方案》 国有股赠送一部分给流通股东作为换取全流通条件，终于股市开始反弹。    2005-6-10 三一重工通过股权分置改革方案 上证指数暴涨超过 8%。    2005-10-27 新修订的《证券法》十届全国人大第十八次会议上高票获得通过     2006 证监会《国有股股权分置改革方案》 证监会不再打压，出台大量政策恢复股市机能      股市开始了著名的 2006 和 2007 年暴涨行情      股市出现连续上涨 2006 年和 2007 年上半年   2007-5-9  上证指数突破 4000 点      国家和证监会出台类似 1996-12 道金牌样的政策打压股市    2007-5-14 证监会《关于进一步加强投资者教育，强化市场监管有关工作的通知》 提出“买者自负”的原则，表明立场大力打压股市       股民 4.0 时代（2007—2015）      股民代表：崛起的 70、80 后 天朝大妈   2007-5-21 央行出台调控“组合拳”，提高利率和准备金率，国家出手配合打压股市。     2007-5-30 证券交易印花税税率由 1‰调整为 3‰，史称 半夜鸡叫 当天上证指数大跌 6.50%。6月 4 日再大跌 8.26%，连续暴跌 4 天    2007-11-27 中共中央政治局会议提出：防过热，防通胀。 大熊市马上接着展开。    2008-11-11 中国政府宣布 4 万亿投资计划 股市自 1664 点见底开始应声上涨，暴涨 7.27%，掀全线涨停潮。    2009-10-30 : 创业板 正式开张 28 家创业板股票一起上市,接下来一个月这 28 只股票一路暴涨    2013-11-30  12-2 周一开盘后创业板彻底服软，惊天暴跌 8.26%      356 只创业板股票几乎全部跌停！    2015-1-19 两融业务遭处罚，保险、证券、银行全线跌停 两市近 200 支个股跌停    2-16-1-4 中国股市熔断机制生效  股民 5.0 时代（ 2016 年-）   2016-1-8 证监会叫停熔断机制  股民代表：   2018-3-23 特朗普签署总统备忘录 称对中国征税并限制中国企业对美投资 中美贸易战出炉，股市应声而下。 80、90 后“小鲜肉”；60、70 后天朝大妈    一行两会喊话稳信心 国务院副总理刘鹤罕见表态股市      要求各部门切实推出一些具体政策，推动股市健康发展。    2018-10-19 政策层面将有一系列提升市场信心的举措 上交所积极引导境内外长期资金投资 A 股    2019  股市上涨    2020  新冠疫情，各国开启“放水”模式    2021 国家提倡“共同富裕”，出台限制地产，教培，互联网 大盘盘整，个股阴跌；    2022  美联储加息，全球震荡           中国股市八次政策大救市1 #  “救市神器” #  出现频率最高的三大政策\n降息： #  出现频率：4次\n 1996 年两次降息； 1999 年降息并降低存款准备金率、再贷款和再贴现利率； 2002 年 2 月 25 日，降息； 2008 年，五个月内多次降息。  印花税 #  出现频率：3次\n 1999 年 6 月 1 日，国务院决定降低 B 股交易印花税； 2005 年 1 月 24 日，国务院批准印花税减半至 1‰； 2008 年 9 月 18 日，印花税单边(卖方)征收 1‰。  人民日报文章 #  出现频率：2次\n 1994 年，人民日报发表“三大救市政策”：停发新股；试办中外合资基金管理公司；有选择地对资信和管理好的证券机构进行融资。 1999 年，人民日报就证券市场发表题为“坚定信心，规范发展”的特约评论员文章。　  第一次——设证券市场调节基金+邓小平南巡讲话 #  第二次——四不政策+三大救市政策 #  第三次——国企“解困”+大幅降息 #  第四次——“信心比黄金更重要” #  第五次——停止减持国有股 #  第六次——国九条 #  第七次——股权分置改革 #  第八次——印花税单边征收+降息+4 万亿 #     https://news.cnstock.com/news,rdsm-201507-3503970.htm\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "},{"id":38,"href":"/posts/traders/","title":"Traders","section":"Blog","content":" understand traders\n 大量的刻意练习 很少资金,很少的风险,练习 3-5 年 没有一个交易员很在短期内成熟 没有赚到足够的钱的情况下,不要专职做交易员 不做专职/机构交易员,要做专业交易员  "},{"id":39,"href":"/posts/estate-xi+an/","title":"西安","section":"Blog","content":"潜龙在渊\n"},{"id":40,"href":"/docs/project/wuliu/jitu/","title":"JiTu","section":"Wuliu","content":"海外物流 - 加盟\n"},{"id":41,"href":"/docs/project/canyin/kuaican/","title":"KuaiCan","section":"Canyin","content":"简介 #  现在的快餐大概 10 元一份，好一点的 15 到 20 元不等。因为附近是人流聚集区，所以价格比较高，离电子城不远的一个工业区那边快餐只要五六块，好一点的七八块一份。\n首先去找到工业区的餐馆谈，你就说你批发他们家的快餐，然后把价格压低一些。记住多找几家快餐店。然后把顾客经常点的快餐写进你的菜单，再给你的快餐起个名字叫极速快餐。如果有顾客来点餐，你也不需要自己做菜，只要把这些低价批发过来的快餐加热一下就可以卖出去了。\n然后你找到做鼠标垫的厂家，把你的广告词印到鼠标垫上：点餐就点“极速快餐”！当然还要印上联系方式。然后去电子城和附近的小区挨家挨户发放鼠标垫，告诉他们以后鼠标垫都是免费赠送的。坏了，不喜欢了，打电话给我，我再免费送。\n这样顾客在想要点餐的时候，只要看到鼠标垫，就会知道这家店的联系方式，下单成功的概率会比宣传单高很多，因为鼠标垫是长期使用的，而宣传单一般都是到手就扔。\n"},{"id":42,"href":"/docs/invest/general/about-fund/","title":"About Fund","section":"General","content":"fund #  基金的组织形式通常是采取 有限合似制 ，而非公司制。这是因为有限合伙只涉及一次征税，即退出 的时候交税。\n如果是有限责任公司，就涉及两层税制，公司层面交一次企业所得税，分红的时候交一次个人所得税。\n"},{"id":43,"href":"/docs/invest/general/about-invest/","title":"About investment","section":"General","content":"投资关系 #   一级市场（未上市前的公司）私募股权投资可以根据所投资标的成长阶段分为几个种类，\n 第一步是 天使基金(种子、天使、PreA 轮)， 第二是 VC 基金(A-C 轮)，第三是 PE 基金（（轮后到上 市）。  LP 有限合伙人 #  （Limited Partner）\n出资人\n在美国，绝大多数情况下，LP 都有一个最低投资额度——这个数字一般是 600 万美金，中国的话大多都是 600 万人民币。\n为了避免一个 LP 注资过多，大多数公司也会有一个最高投资额度——常见的则是由 1000 万至 2000 万不等。\n一般 LP 的资金都会有一个锁定周期（Lock-Up Period），一般为一年至数年不等（要看公司具体投资的项目而定）。\n在合伙企业不能清偿到期债务时，LP 仅以其对有限合伙企业的出资为限承担责任，剩余的由 GP 承担无限连带责任。\n一般 GP 投 1%， LP 投 99%\nGP 普通合伙人 #  (General Partner)\n大 GP 的收入一般是所谓 2/20，就是 2%的管理费+20%的收益分成（Carry）.\nGP 就是负责募、投、管、退，这四个主要职责，对基金的收益负责。\n普通合伙人是指在合伙企业中对合伙企业的债务依法承担无限连带责任的自然人、法人和其他组织。\nGP 需要对合伙企业债务承担无限连带责任，为了尽可能规避经营风险，实践中一般选择有限责任公司作为 GP 主体。\nAngels 天使投资 #  （Angel Investment）\n天使投资选择的企业都会是一些非常非常早期的企业，他们甚至没有一个完整的产品，或者仅仅只有一个概念。\nVC 风险投资 #  （Venture Capital）\nPE 私募基金 #  （Private Equity）\nIB 投资银行 #  （Investment Banking）\nFOF 母基金 #  FoF 一般是不会股票，债券，期货进行投资的。他们会选择投资那些本身盈利能力很强的基金公司\n\\newpage\n（Fund of Fund, FoF）\n一致行动人 #  界定为根据正式或非正式的协议或默契，积极合作，通过其中任何人取得目标公司股权以获得或巩固对目标公司控制权的人。\n一致行动人协议一般都有一定的期限，在期限届满后，协议失效。也可能因为目的完成而被解除或撤销。一般保持一致行动人往往是为了某种特殊目的，例如上市。\n实际控制人 #  是指虽不是公司的股东，但通过投资关系、协议或者其他安排，能够实际支配公司的人。\n"},{"id":44,"href":"/docs/invest/general/basic-concpetion/","title":"Basic Concept","section":"General","content":" State \u0026ldquo;DONE\u0026rdquo; from \u0026ldquo;TODO\u0026rdquo; [2022-02-12 周六 08:59]  OMO 公开市场操作 #  (Open market operations) #  公开市场操作是中央银行吞吐基础货币，调节市场流动性的主要货币政策工具，通过中央银行与市场交易对手进行有价证券和外汇交易，实现货币政策调控目标。\n中国公开市场操作包括人民币操作和外汇操作两部分。\n从交易品种看，中国人民银行公开市场业务债券交易主要包括回购交易、现券交易和发行中央银行票据。\n回购交易 #    正回购 为中国人民银行向一级交易商卖出有价证券，并约定在未来购回的行为。央行进行正回购操作为回收流动性，正回购到期则为投放流动性。\n  逆回购 为中国人民银行向一级交易商购买有价证券，并约定在未来由一级交易商购回的行为。央行进行逆回购操作为投放流动性，逆回购到期则为回收流动性。\n  现券交易 #    现券买断 央行直接从二级市场买入债券，一次性地投放基础货币；\n  现券卖断 为央行直接卖出持有债券，一次性地回笼基础货币。\n  中央银行票据 #  即中国人民银行发行的短期债券，央行通过发行央行票据可以回笼基础货币，央行票据到期则体现为投放基础货币。\nnote #  OMO、MLF 和 LPR 是央行针对不同期限和不同目标的利率调整工具。\n理论上来看，OMO、MLF 以及 LPR 三者变化实现不同的政策效果，并且调整利率曲线变化，因而三者不一定需要同时变化.\nMLF 中期借贷便利 #  （Medium-term Lending Facility） #  feature #   央行借钱给商业银行(有门槛的，就是质押品) 操作时段一般为 3 个月、6个月、1年。  function #   为了增加市场流动性  LPR 贷款市场报价利率 #  (Loan Prime Rate) k #  LPR 浮动利率是由 LPR 市场报价利率加基点构成的，基点数是固定的.\n常识 #   贷款市场报价利率 ，也叫 贷款基础利率 ，由 18 家银行共同报价计算得来的，央行用它来代替原有的贷款基准利率。 利率分为 1 年期和 5 年期以上，房贷是和 5 年期以上的利率挂钩的。是在 5 年期的 LPR 基础上加基点上浮而来的。 LPR 每个月 20 日（遇节假日顺延）会更新一次 房贷不会跟随 LPR 每月更新。  SLF 常备借贷便利 #  主要功能是满足金融机构期限较长的大额流动性需求，在银行体系流动性出现临时性波动时相机运用。\n 面对的是政策性银行和全国性商业银行 期限为 1-3 个月 利率水平则根据货币政策调控、引导市场利率的需要等因素综合确定。  SLO 短期流动性调节工具。 #   每周二、周四，央行一般都会进行公开市场操作，目前最主要的是回购操作。 主要以期限在 7 天以内的正回购和逆回购为主 央行可以通过 SLO 来调节 7 天以内的超短期货币供应和利率，遇节假日可适当延长操作期限 采用市场化利率招标方式开展操作。  PSL 全称为抵押补充贷款工具 #   多是央行为了支持一些特定项目的建设向政策性银行(如国开行)提供的成本较低的抵押贷款，期限一般在 3-5 年; 它还可以用于向市场投放货币，调节中期市场利率。  基点 #  bp 是指基点 Basis Point（bp）\n基点的定义是“百分之零点零一”（0.01%）\n金融方面，债券和票据利率改变量的度量单位。一个基点等于 0.01 个百分点，即 0.01%，因此，100 个基点等于 1%。\n逆回购 #  逆回购从本质上讲是一种短期贷款，就是你把钱借给别人，获得固定利息；别人用债券（国债或企业债）作抵押，到期还本付息。\n上海市场国债逆回购：交易数量为 10 万或 10 万的整数倍；\n深圳市场债券逆回购：交易数量为 1000 元或其整数倍；\n 净收益 #  净收益 = 成交金额×年收益率×资金实际占用天数/365 天 - 手续费\n比活期存款利息高.\n通货膨胀 #  三个主要的催化剂：\n 需求拉动型通货膨胀 指一个经济体对商品和服务的总体需求增长速度快于该经济体的生产能力的增长速度供需 需求增加而供给减少，从而导致价格上涨。 成本拉动型通货膨胀 内在通货膨胀 随着商品和服务价格的上涨，劳动力期望并要求更高的工资来维持他们的生活成本。  通货紧缩 #  指货币供应量少于流通领域对货币的实际需求量而引起的货币升值，从而引起的商品和劳务的货币价格总水平持续下跌的现象。(简单来说就是钱变得更值钱了)\n通货膨胀 VS 通货紧缩 #  货币具有“通货”的性质。.\n央行增加货币供应量本质是增加社会总产出，而不是让钞票更值钱。\n通货紧缩时，持有现金本身就是对自己的投资。\n适度的通货膨胀是一个正常的经济现象，而通货紧缩会阻碍经济的正常运行，比通货膨胀更加可怕！\n滞胀 #  通货膨胀、经济增长缓慢或停滞、失业率相对较高的经济.\n滞胀的原因各不相同，但主要是由于严厉的监管和货币供应量的增加。\n货币乘数 #  货币乘数是指货币供给量对基础货币的倍数关系，简单地说，货币乘数是一单位准备金所产生的货币量。\n对于不同时期的货币乘数大概率是不一样的，总体而言随时间上涨和上涨，但是会有一个上限，而且这个上限肯定是小于 法定准备金的倒数 的，也就是基础货币最终不可能全部回到央行的(因为货币可能会损坏，银行为了控制风险一定会留存一部分现金，公众也会预留一部分进行日常使用)。\n信贷, M2 和社融 #   货币政策、信贷、M2与社融\n信贷 #  在二级银行制度下，央行只“印”了基础货币，而广义货币是银行通过信贷投放来派生的。央行又规定了存款准备金率，从而限定的银行派生 M2 的能力。\nM2 #     M define     M0（货币） 流通中的现金，即流通于银行体系之外的现金   M1（狭义货币） M0 + 企业活期存款   M2（广义货币） M1 + 准货币（居民储蓄款 + 定期存款 + 其他存款      M0 就是市场上流通的钞票，代表的是直接的购买力， M0 存在周期性特征，即在春节前后，M0 的存量大幅增加，因为春节我们需要准备大量的红包。 央行资产负债表中的负债项[货币发行]科目-其他存款性机构的资产项[库存现金].(央行发行了多少实质性的钞票减去存放在银行中的钞票，就可以测算出 M0 的数量大小)\n  M1 M0 的基础上加上其他存款性机构的负债项[单位活期存款]。\n  M2 M0、M1、M2 的流动性是逐级递减的\n而 M2 是商业银行资产负债表的右侧，是负债端。\n  社融 #  社融是金融机构资产负债表的左侧，是资产端\nM2 和社融通常是投资的领先指标，M2 增速减去名义 GDP 的增速往往用来评估股市面临的流动性情况。\n"},{"id":45,"href":"/posts/ji-zhui-yu-shen-ti-jian-kang/","title":"脊椎与身体健康–万病皆从背骨起","section":"Blog","content":"脊椎 #  人体的脊椎由颈椎、胸椎、腰椎、骶椎和尾椎组成。\n其中颈椎 7 节，胸椎 12 节，腰椎 5 节，骶椎 5 节（当然有些人有腰椎骶化），骶椎成年以后融合成一块骶骨。\n尾椎幼年时是 3～5 块，成长的过程中尾椎也渐渐融合成一块尾骨。所以小孩子一出生应该是 32～34 节，成年人是 26 节。\n这 26 节脊椎中比较重要的是三部分：颈椎，胸椎，腰椎。\n每一节脊椎两边都分布着神经，一共 31 对，其中:\n 颈神经 8 对 胸神经 12 对 腰神经 5 对 骶神经 5 对 尾神经 1 对  每一对神经都从脊椎间的空隙穿出。\n这 31 对脊神经犹如脊椎上放出的 62 根“电线”，线的末端牵着五脏六腑。\n 脊椎节段神经与脏器相关关系示意\n https://mmbiz.qpic.cn/mmbiz_jpg/3wo2f6KZxVQ0HITflpYy12LUy1bORic0uDJTYFYJZtyibIP5iaRPLOcEe3ryqeS2nfjibibfvN4bT5ic2k1jpwYZmuyg/640?wx_fmt=jpeg\u0026tp=webp\u0026wxfrom=5\u0026wx_lazy=1\u0026wx_co=1\n脊神经 #  分为运动神经和自主神经。\n 运动神经主管皮肤和肌肉； 自主神经，主管内脏，所以自主神经也称为内脏神经，植物神经。  内脏神经分为交感神经和副交感神经.     https://mmbiz.qpic.cn/mmbiz_jpg/3wo2f6KZxVQ0HITflpYy12LUy1bORic0uIibg8Z23yauhf5QU61tib1p34ia89WJzdsCJ5oEGxClqCQYjHbIy6Tehw/640?wx_fmt=jpeg\u0026tp=webp\u0026wxfrom=5\u0026wx_lazy=1\u0026wx_co=1\n"},{"id":46,"href":"/docs/invest/options/basic/options/","title":"Options","section":"Basic","content":"策略 #  见习 #  结果 #  "},{"id":47,"href":"/posts/cai-gen-tan/","title":"菜根谭","section":"Blog","content":"修身 #   欲做精金美玉的人品，定从烈火中锻来；思立掀天揭地的事功，须向薄冰上履过。 一念错，便觉百行皆非，防之当如渡海浮囊，勿容一针之罅漏；万善全，始得一生无悔。修之当如淩去宝树，须假众以撑持。 忙处事为，常向闲中先检点，过举自稀。动时念想，预从静里密持，非心自息。 为善欲自高月胜人，施恩而欲要名结好，修业而欲惊世通话骇俗，植节而欲标 异见奇，此皆是善念中戈矛，理路上荆棘，最易夹带，最难拔除者也。须是涤尽渣滓，斩绝萌芽，才见本来真体。 能轻富贵，不能轻一轻富贵之心；能重义，又复重一重名义之念。是事境之芥蒂未扫。此处拔除不净，恐石去而复生矣。 纷扰固溺志之场，而枯寂亦心之地。故学者当栖心元默，以宁吾真体。亦当适志恬愉，以养吾圆机。 昨日之日不可留，留之则根烬复萌，而尘情终累乎理趣；今日之是不可执，执这则渣滓未化，而理趣反转为欲根。 无事便思有闲杂念想否。有事便思有浮意气否。得意便思有骄矜辞色否。失意便思有怨望情怀否。时时检点，到得从多入少、从有入无，才是学问的真消息。 士人有百折不回之 真心，才有万变不穷之妙用。立业建功，事事要从实地着脚，若少慕声，便成伪果；讲道修德，念念要从虚处立基，若稍计功效，便落尘情。 身不宜忙，而忙于闲暇之时，亦可儆惕惰气；心不可放，而放于收摄之后，亦可鼓畅天机。 钟鼓体虚，为声闻而招撞；麋鹿性逸，因豢养而受羁縻。可见名为招祸之本，欲乃散志之媒。学者不可不力为扫除也。 一念常惺，才避去神弓鬼矢；纤尘不染；方解开地网天罗。 一点不能说忍的念头，是生民生物之根芽；一段不为的气节，是撑地之柱石。故君子于一虫一蚁不忍伤残，一缕地丝勿容贪冒，便可为万物立命立心矣。 拨开世上尘氛，胸中自无火焰冰竞；消却心中鄙吝。眼前时有月到风来。 学者动静殊操、喧寂异趣，还是锻炼未熟，心神混淆故耳。须是操存涵养，定云止水中，有鸢飞鱼跃的景象；风狂雨骤处，有波恬浪静的风光，才见处一化齐之妙。 心是一颗明珠。以物欲障蔽之，犹明珠而混以泥沙，其洗涤犹易；以情识衬贴之，犹明珠而饰以银黄，其洗涤最难。故学者不患垢病，而洁病治；不畏事障，而畏理障之 难除。 躯壳的我要看得破，则万有空而其心常虚，虚则义理来居；性命和我要兴得真，则万理皆备而其心常实，实则物欲不入。 面上扫开十层甲，眉目才无可憎；胸中涤去数斗尘，语言方觉有味。 完得心是之本来，方可言了心；尽得世间之常道，才堪论岀世。 我果为洪炉大冶，何患顽金钝铁之不可陶熔。我果为巨海长江，何患横流污渎之不能容纳。 白日欺人，难逃清夜之鬼报；红颜失志，空贻皓首之悲伤。 以积货财之心积学问，以求功名之念求道德，以爱妻子之心爱父母，以保爵位之策保国家，岀此入彼，念虑只差毫末，而超凡入圣，人品且判星渊矣。人胡不猛然转念哉！ 立百福之基，只在一念慈祥，开万善之门，无如寸心挹损。 塞得物欲之路，才堪辟道义之门；弛得尘俗之肩，方可挑圣贤之担。 容得性情上偏私，便是一大学问；消得家庭内嫌雪，才为火内栽莲。 事理因人言而悟者，有悟还有迷，总不如自悟之了了；意兴从外境而得者，有得还有失，总不旭自处之休休。 情之同处即为性，舍情则性不可见，欲之公处即为理，舍欲则理不可明。故君子不能灭情，惟事平情而已；不能绝欲，惟期寡欲而已。 欲遇变而无仓忙，须向常时念念守得定；欲临死而无贪恋，段仙生时事事看得轻。一念过差，足丧生平之善；终身检饬，难盖一事之愆。 从五更枕席上参勘心体，气未动，情未萌，才见本来面目；向三时饮食中谙练世味，浓不欣，淡不厌，方为切实工夫。  应酬 #   操存要有真宰，无真宰则遇事便倒，何以植顶天立地之砥柱！应用要有圆机，无机则触物有碍，何以成旋乾转坤之经纶！ 士君子之涉世，于人不可轻为喜怒，喜怒轻，则心腹肝胆皆为人所窥；于物不可重为爱憎，爱憎重，则意气精神悉为物所制。 倚高才而玩世，背后须防影之虫；饰厚貌以欺人，面前恐有照之镜。 心体澄彻，常在明镜止水之中，则天下自无可厌之事；意气和平，常在丽日风之内，则天下自无可恶之人。当是非邪正之交，不可少迁就，少迁就则失从违之 正；值利害得失之 会，不可太分明，太分明则起避之私。 苍蝇附骥，捷则捷矣，难辞处后之羞；萝茑依松，高则高矣，未免仰攀之耻。所以君子宁以风霜自挟，毋为鱼鸟亲人。 好丑心太明，收物不分契；贤愚心太明，则人不亲。士君子从而是内精明而外浑厚，使好丑两得其平，贤愚共受其益，才是生的德量。 伺察以为明者，常因明南昌生暗，故君子以恬养智；奋迅以为速者，多因速度南昌致迟，故君子以重持轻。士君子 济人利物，宜居其名，居其名则德损；士大夫忧国为人，当有其心，不当有其语，有其语则毁来。 遇大事矜持者，小事必纵弛；处明庭检饰者，暗室必放逸。君子只是一个念头持到底，自然临小事如临大敌，坐密室若坐通衢。 使人有面前之誉，不若使其无背后之毁；使人有乍交之欢，不若使其无久处之厌。 善启迪人心者，当因其所而渐通之，毌强开其所闭；善移风化者，当因其所易而渐及之，毌轻矫其所难。 彩笔描空，笔不落色，而空亦不受染；利刀割水，刀不损锷，而水亦不留痕。得此意以持身涉世，感与应俱适，心与境两忘矣。 已之情欲不可纵，当用逆之之法以制之，其道只在一忍字；人之情欲不可拂，当用顺之之法以调之，其道只在一恕字。今人皆恕以适已而忍以制人，毌乃不可乎！ 好察非明，能察能不察之谓明；必胜非勇，能胜不胜之谓勇。 随时之内善救时，若和风之消酷暑；混俗之中能脱垢浊之尘缘；思岀世而无染者，段先谙尽世中滋味。否则无以持空寂之后苦趣。 与人者，与其易疏于终，不若难亲于始；御事者，与其巧持于后，不若拙守于前。 酷烈之祸，多起于玩之人；盛满炎功，常败于细微炎事。故语去：“人人道好，段防一人着脑；事事有功，采购防一事不终。” 功名富贵，直从灭处观究竟，则贪恋自轻；横逆困穷，直从起处究由来，则怨尤自息。 宇宙内事要力担当，又要善摆脱。不担当，则无经世之事业；不摆脱，则列出世之襟期。 待人而留有余，不尽之恩礼，则可以维系无厌之人心；御事而留有余，不尽之才智，则可以提防不测之事变。 了心自了事，犹根拔而草不生；逃世不逃名，似膻存蚋而仍集。 仇边之弩易避，而恩里之戈难防；苦 时之坎易逃，而乐处之阱难脱。 膻秽则蝇蚋丛嘬，芳磬则蜂蝶交侵。故君子不作垢业，亦不立芳名。只是元气浑然，圭角不露，便是持身涉世一安乐窝也。 从静中观物动，向闲处看人忙，才得超尘脱俗的趣味；遇忙处会偷闲，处闹中能取静，便是安身立命的工夫。 邀千百之欢，不如释一人之怨；希千百事之荣，不如免一事之丑。 落落者，难合亦难分；欣欣者，易亲亦易散。是以君子宁以刚方见惮，毌以媚悦取容。 意气与天下相期，如春风之鼓畅庶类，不宜存半点隔之形；肝胆与天下相照，似秋月之洞彻群品，不可作一毫暧昧之状。 仕途虽赫奕，常思林下的风味，则权且之念自轻；世途虽纷华，常思泉下的光景，则利欲之心自淡。鸿示至先援弓，兔已亡再呼，总非当机作用国风息时休起浪，岸到处便离船，才是了手工夫。 从热闹场中出几句清冷言语，便扫除无限杀机；向寒微路上用一点赤热心肠，自培植许多生意。随缘便是遣缘，似舞蝶与飞花共适；顺事自然无事，若满月偕盂水同圆。 淡泊之守，须从浓艳场中试来；镇定之操，还向纷纭境上勘过。不然操持未定，应用未圆，恐一临机登坛，而上品禅师又成一下品俗士矣。 廉所以戒贪。我果不贪，又何必标一廉名，以来贪夫之侧目。让所以戒争，又何必立一让的，以致暴客之弯弓。 无事常如有事时，提防才可以弥意外之变；有事常如无事时，镇定方可以消局中之危。 处世而欲人感恩，便为敛怨之道；遇事而为人除害，即是导利之机。 持身如泰山九鼎凝然不动，则愆尤自少；应吉若流水落花悠然而逝，则趣味常多。 君子严如介石南昌畏其难亲。鲜不以明珠为怪物而起胺剑之心；小人骨如脂南昌喜其易合，鲜不以互毒螫为甘饴而纵染指之欲。 遇事只一味镇定从容，纵纷若乱丝，终当就绪；待人无半毫矫伪欺隐，虽狡如鬼，亦自献诚。 肝肠煦若春风，虽囊无一文，还怜茕独；气骨清如秋水，纵家徒四壁，终傲王公。 讨了人事的便宜，必受天道的亏；贪发世味胡滋益，必招性分胡损。涉世者宜蕃择之，慎毌贪黄雀南昌坠深井，舍隋珠南昌弹飞禽也。费千金而结纳贤豪，熟若倾半瓢之粟，以济饥饿之人；构千楹而招来宾客，孰若葺数椽之茅，以庇孤寒之士。 解斗者助之以威，则怒气自平；惩贪者济之以欲，则利心反淡。所谓因其势而利导之，亦救时应变一权宜法也。 市恩不如报德之为。雪忿不若忍耻不高。要誉不如逃名之不适。矫情不若直节之为真。 救既败事者，如驭临之马，休轻策一鞭；图垂成之功者，如挽上滩之舟，莫少停一棹。/ 先达笑弹冠，休向侯门轻曳裾；相知犹按剑，莫从世路暗投珠。 杨修之躯见杀于曹操，以露已之长也；韦诞之墓见伐于钟繇，以秘已之美也。故哲士多匿采以韬光，至人常逊美而公善。 少年的人，不患其不奋迅，常患畚迅而成卤莽，故当抑其躁心；老成的人，不患其不持重，常患以持重而成退缩，故当振其惰气。 望重缙绅，怎似寒微之颂德。朋来海宇，何如骨肉之孚心。 舌存常见齿亡，刚强终不胜柔弱；户朽未闻枢蠹，偏执岂能及圆融。  评议 #   物莫大于天地日月，而子美云：“日月笼中鸟，亁坤水上萍。”莫事大于揖逊征诛，而康节云：“唐虞揖逊三杯酒，汤武征诛一局棋。”人能以此胸襟眼界吞吐六合，上下千古，事来如沤生大海，事去如影灭长空，自经纶万变而不动一尘矣。 君子好名，便起欺人之念；小人好名，犹怀畏人之心。故人而皆好名，则开诈善之门。使人而不好名，则绝为善之路。此讥好名者，当严责君子，不当过求于小人也。 大恶多从柔处伏，哲士须防绵里之针；深仇常自爱中来，达人宜远刀头之蜜。 持身涉世，不可随境而迁。须是大火流金而清风穆然，严霜杀物而和气蔼然，阴霾翳空而慧日朗然，洪涛倒海而坻柱屹我，方是宇宙内的真人品。爱是万缘之根，当知割舍。识是众欲之本，要力扫除。 作人要脱俗，不可存一矫俗这心；应世要随时，不可起一趋时之念。 宁有求全之毁，不可有过情之誉；宁有无妄之灾，不可有非分之福。 毁人者不美，而受人毁者遭一番讪谤便加一番修省，可释回而增美；欺人者非福，而受人欺者遇一番横逆一番器宇，可以转祸而为福。 梦里悬金佩玉，事事逼真，睡去虽真觉后假；闲中演偈谈元，言言酷似，说来虽是用时非。 天欲祸人，必先以微福骄之，所以福来不必喜，要看他会受；天欲福人，必先以微祸儆之，所以祸来不必忧，要看他会救。 荣与辱共蒂，厌辱何须求荣；生与死同根，贪生不必畏死。 作人只是一味率真，踪迹虽隐还显；存心若有半毫未净，事为虽公亦私。 鹩占一枝，反笑鹏心奢侈；兔营三窟，转嗤鹤垒高危。智小者不可以谋大，趣卑者不可与谈高。信然矣！ 贫贱骄人，虽涉虚骄，还有几分侠气，英雄欺世，纵似挥霍，钱没半点真心。糟糠不为彘肥，我何事偏贪钩下饵；锦绮岂因牺贵，谁人能解笼中囵囮。 琴书诗画，达士以之养性灵，而庸夫徒赏其迹象；山川云物，高人以之助学识，而俗子徒玩其光华，可见事物无定品，随人识见以为商下。故读书穷理，要以识趣为先。 姜女不尚华，似疏梅之映淡月；禅师不落空寂，若碧沼之吐青莲。 廉官多无后，以其太清也，痴人每多福，以鞭近厚也。故君子虽重廉洁，不可无含垢纳污之雅量。虽戒痴顽，亦不必有察渊洗垢之精明。 密则神气拘逼，疏则城真烂漫，此岂独诗文之工拙从此分哉！吾见周密之人纯用机巧，疏狂之士独任性真，人心之生死亦于此判也。 翠筱傲严霜，节 1 纵商，无伤冲雅；红蕖媚秋水，色虽艳丽，何禹清修。 簪缨之士，常不及孤寒之子可以抗节致忠，庙堂之士常不及山野之夫可以料事烛理。何也？彼以浓艳损志，此以淡泊全真也。 荣宠旁边辱等待，不必扬扬；困穷背后福跟随，何段戚戚。 古人闲适处，今人却忙过了一生，古人实受处，今人又虚度了一世。总是耽空逐妄，看全色身不破，认个法身不真耳。 芝草无根醴无源，志士当勇奋翼；彩云易散琉璃脆，达人当早回头。 少壮者，事事当用意而意反轻，徒汛汛作水中凫而已，何以振云霄之翮？衰老者，事事宜忘情而情反重，徒碌碌为辕下驹而已，何以脱缰锁之身？ 帆只扬五公，船便安。水只注五分，器便稳。如韩信以勇震主被擒，陆机以才名冠世见杀，霍光败于权势逼君，石崇死于财赋敌国，皆以十公取败者刀。康节云：“饮酒莫教成酩酊，看花慎勿至离披。”旨哉言乎 附势者如寄生依木，木伐而寄生亦枯；窃利者如蝇虰盗人，人死而蝇虰亦灭。始以势利害人，终以势利自毙。势利炎不害也，如是夫！ 失血于杯中，堪笑猩猩之嗜酒，为巢于幕上，可怜燕燕之偷安。 鹤立鸡群，可谓超然无侣矣。然进而观于大海之鹏。则眇然自小。又进而求之九霄之凤，则巍乎莫及。所以至人常若无若虚，而盛德多不柔不伐也，贪心胜者，逐兽而不见泰山在前，弹雀而不知深井在后；疑心胜者，见弓影而惊杯中之蛇，听人立而信市上之虎。人心一偏，遂视有为无，造无作有。如此，心可妄动哉！ 蛾扑火，火焦蛾，叵谓祸生无本；果种花，花结果，须知福至有因。 车争险道，马骋先鞭，到败处未免噬脐；粟喜堆山，几朝霜，几朝雪，傲就琅玕。 富贵是无情之物，看得他重，他害你越大，贫贱是耐久之交，处得他好，他益你深，故贪商旅而恋金谷乾，竟被一时之显戮，乐箪瓢而甘敝缊者，张洋享千载之令名。 鸽恶铃而商飞，不知敛翼而铃自息；人恶影而疾走，不知处阴而影自灭。故愚夫徒走高飞，而平地反为苦海，达士知处阴敛翼，而〇岩亦是坦途。秋虫春鸟共畅天机，何必浪生悲喜，老树新花同含生意，胡为妄别媸妍。 多栽桃李少栽荆，便是开条福路，不积诗书偏积玉，还如筑个祸基。 万境一辙原无地，着个穷通，万物一体原无处，分个彼我，世人迷真逐妄，乃向坦途上自没一坷坎，从空洞中自筑一藩蓠，享受足慨哉！ 大聪明的人，小事必朦胧，大懵懂的人，小事必伺察。盖伺察乃懵懂之根，而朦胧正聪明之窟也。 大烈鸿猷，常出悠闲镇定之士，不必忙忙，休征景福，多集宽洪长厚之家，何须琐琐。 贫士肯济人，才是性天中惠泽，闹场能学道，方为心地上工夫。 人生只为欲字所累，便如马如牛，听人羁络；为鹰为犬，任物鞭笞。若果一念清明，淡然无欲，天地也不能转动我，鬼神也不能役使我，况一切区区事物乎! 贫得者身富而尽贫，知足者身贫而心富；居高者形逸而神劳，处下者形劳而神逸。孰得孰失，孰幻孰真，达人当自辨之。 谢豹覆面，犹知自愧，，唐鼠易肠，犹知自悔。美国 愧悔二字，乃吾人去恶迁善之门，起死回生之路也，人生无此念头，便是既死之寒灰，已枯之槁木矣。何处讨些生理？ 异宝厅琛，俱民必争之器，瑰节奇行，多冒不祥之名，总为若寻常历履简行藏，可以完天地浑噩之真，享民物各平之福。 福善不在杳冥，即在食息起居处牖其衷；祸淫不在幽渺，即在动静语默间夺其魄。可见人之精爽通于天，于之威命即寓于人，天人岂相远哉！  闲适 #   昼闲人寂，听数声鸟语悠扬，不觉耳根尽彻；夜静天高，看一片云光舒巻，顿令眼界俱空。 世事如棋局，不着得才是高手，人生似瓦盆，打破了方见真空。 龙可豢非真龙，虎可搏非真虎，故爵禄可饵荣进之辈，必不可笼淡无欲之人；鼎镬可及宠利之流，必不可加飘然远引之士。 一场闲富贵，狠狠争来，虽得还不失，百岁好光阴，忙忙过了，纵寿亦为夭。 高车嫌地僻，不如钱鸟解亲人，驷马喜门高。怎似莺花能避俗。 红烛烧残，万念自然厌冷，黄梁梦破，一身亦似云浮。 千载厅逢，无如好书良友，一生清福，只在碗茗炉烟。 蓬茅下育诗读书，日日与圣贤晤晤，谁云贫是病？樽垒边幕天席地，时时共造化氤氲，孰谓非禅？兴来醉倒落花前，天地即为衾枕。机息坐忘盘上，古今尽属蜉蝣。 昴藏老鹤虽饥，饮啄犹闲，肯同鸡鹜之营营而竞食？偃蹇寒松纵老，丰标自在，岂似桃李之灼灼而争妍！ 吾人适志于花柳烂漫之量，得趣于笙歌腾沸之处，乃是造化之幻境，人心之荡念刀，须从木落草枯之后，向声希味淡之中，觅得一些消息，才是乾坤的橐龠，人物的根宗。 静处观人事，即伊吕之勋庸，夷齐之节义，无非大海浮沤。闲中玩物情，虽木石之偏枯，鹿豕之顽蠢，总是吾性真如。 花开花谢春不管，拂意事休对人言，水暖水寒钱自知，会心处还期独赏。 闲观扑纸蝇，笑痴人自生障碍，零用钱觇巢鹊，叹杰士空逞英雄。 看破有尽身躯，万境之尘缘自息；司入无坏境界，一轮之心月独明。只是向忙里偷闲，遇缺处知足，则操纵在我，作息自如，即造物不得与之论劳逸较志盈矣。 木床枕冷家风，拥衾时魂梦亦爽，麦饭豆羹淡滋味，放箸处齿颊犹香。 谈纷华而厌者，或见纷华而喜；语淡泊而欣者，或处淡泊而厌，须扫除浓淡之见，一定要却欣厌之情，才可以忘纷华而甘淡泊也。 鸟惊心，花溅泪，怀此热心肠，如何领取得冷风月，山写照，水传神，识吾真面目，方可摆脱得幻乾坤，富贵得一世宠荣，到死时反增了个恋字，如负重担，贫贱得一世清苦，到死时反脱了一个厌字，如释重枷，人诚想念到此，当急回贪恋之首而猛舒愁苦之眉矣。 人之有生也，如太仓之粒米，如灼目之电光，如悬崖之朽木，如逝海之一波。知此者如何不悲？如何不乐？如何看他不破而怀贪生之虑？如何看他不重而凤凰台 虚生之羞？ 鹬蚌相持，兔犬共毙，冷觑来令人猛气外消，鸥凫共浴，鹿豕同眠，闲观去使我机心顿息。 迷则乐境成苦海，如水凝为冰，司则苦海为乐境，犹冰涣作水，可见苦乐无二境，迷悟非两心，只在一转念间耳。 遍阅人情，始识疏狂之足贵，备尝世味，方知淡泊之为真。 地宽天高，尚觉鹏程之窄小，云深松老，方知鹤梦之修闲。 两栖个空拳握古今，握住了还当放手，一条竹杖挑风月，挑到时也要息肩。 阶下几点飞翠落红，收拾来夫非诗料，窗前一片浮青映白，悟入处尽是禅机。 忽睹天际彩云，常疑刀事皆虚事再观山中闲木，方信闲人是福人。 东海水曾闻无定波，世事何须扼腕？北邙山未省留闲地，人生且自舒眉。 天地尚无停息，日月且有盈亏，况区区人世能事事圆满而时时暇逸乎？只是向忙里偷闲，遇缺处知足，则操纵在我，作息自如，即造物不得与之论家世界逸较亏盈矣！ “霜天闻鹤唳，雪夜听鸡鸣”，得乾坤清纯之气，“晴空看鸟飞，活水观鱼戏”这只股票宇宙活泼之机。 闲烹山苟听瓶声，炉内识阴阳之理，漫履楸楸观局戏，手中悟生杀之机。 芳菲园林看蜂忙，觑破几般尘婧世态，寂寞衡茅马燕寝，引起一各冷趣幽思。 会心不在远，得趣不在多，公园池拳石间，便居然有万里山川之势，片言只语内，便宛然见万古圣贤之心，才是高士和眼界，达人的胸襟。 心与竹俱空，闲是非何处安脚？貌偕松共瘦，知忧喜无由上眉。 趋炎虽暖，暖后更觉寒威；食蔗能甘，甘余便生苦趣，何似养志于清修而凉不涉，栖心于淡泊而甘苦俱忘，其自得为更多也。 席拥飞落絮，坐林中锦绣团裀，炉烹白雪清冰，熬天上玲珑液髓。 逸态闲情，惟期自尚，何事处修辚幅，清标傲骨，不愿人怜，无劳多买胭脂。 天地景物，如山间之空翠，水上之涟漪，潭中之云影，草际之烟光，月下之花容，风中之柳态，若有若无，半真半幻，最足以悦人习目而豁人性灵。真天地暗一妙境也。 “乐意相关禽对语，生香不断树交花”，上是无彼无此得真机，“野公更无山隔断，天光常与水相连“，此彻上彻下和真意。吾人时时以此景象注之心目，何患心思不活泼，气象不宽平! 鹤唳，雪月，霜天，想见屈大夫醒时之激烈，鸥眠、春风，暖日，会知陶处士醉里之风流。 黄鸟情多，常向梦中呼醉客，白云意懒，偏来僻处媚幽人。 栖迟蓬户，耳目虽拘而神情自旷，结纳山翁，仪文虽略而意念常真。 满室清风满几月，禁中笔笔见天心，一溪流水一山云，行处时时观妙道。 炮凤烹龙，放箸时与虀盐列异，悬金佩玉，成灰处共瓦砾何殊。 扫地白云来，才着工夫便起障，业障凿池明月入，能空境界自生明。 造花唤作小儿，切莫受渠戏弄，天地丸为大块，须要任我炉锤。 想到禾骨黄泉，壮士之肝肠自冷，禁老清溪碧嶂，俗流之胸次亦闲。 夜眠八尺，日啖二升，何须百般计较，书读五车，才分八斗，未闻一日清闲。  概论 #   君子之心事，天青日白，不可使人不知，君子炎才华，玉韫珠藏，不可使人易知。 耳中常闻逆耳之立，心中常有拂心之事，才是进德修行的砥石，若言言悦耳，事事快心，便么经生埋在鸩毒中矣。 疾风怒雨，禽鸟戚感觉；霁月光风，草木欣欣，可见天地不可一日无和气，人心不可一日无喜神。 醲肥辛甘非真味，真味只是淡，神厅卓异非至人，至人只是常。 夜深人静独坐观心，始知妄穷而真独露，每于此中得大机趣，既觉真现妄难逃，又于此中得大惭忸。 恩里来生害，故快意时须早回头，败后或反成功，故拂心处切莫放手。 藜口苋肠者，多冰清玉洁，衮衣玉食者，甘婢膝奴颜，盖与以淡泊明，而世从肥甘丧矣。 面前的田地要放得宽，使人无不平之叹，身生的惠泽要流得长，使人有不匮之思。 路径窄处留一步，与人行，滋味浓的减三分，让人嗜。此是涉世一极乐法。 作人无甚高远的事业，摆脱得俗也不用便入名流，为学无甚增益的工夫，减除得物累便臻圣境。 宠利毌居人前，德业毌落人后，受享毌逾分外，修持毌减分中。 处世让一步为高，退步即进步的张本，待人宽一分是福，利人实利已的根基。 盖世的功劳，当不得一个矜字，弥天的罪一定过，当不得一个悔字。 完名美节，不宜独任，分瞟与人，可以远害全身，辱行污名，不宜全推，引些归已，可以韬光养德。 事事要留个有余不尽的决思，便造物不能忌我，鬼神不能损我，若业必求满，功必求盈者，不生内变，必招外忧。 家庭有个真佛，日用有种真道，人能诚心和气，愉色婉言 ，使父母兄弟间形体万倍也。 攻人之恶毌太严，要思其堪受，教人以拳头中毌一定要高，当使其可从。 粪虫至秽变为蝉，而饮露于秋风，腐草无光化为荧，而耀采于夏月，故知洁常自污出，明每从暗生也。 矜高倨傲，无非客气降伏得，客气下而后正气伸，情欲意识，尽属忘尽而后真心现。 饱后思味，则浓淡之境都消，色且思淫，则男女炎见尽绝，故人当以事后之悔，悟破临事之痴迷，同性定而动无不正。 居轩冕之中，不可无山林的气味，处林泉之下，须要怀廊庙的经纶。处世不必邀功，与人不要感德，无怨便是德。 忧勤是美德，太苦则无以适性怡情。淡泊是高风，太枯则无以济人利物。 事穷势蹙之人，当原其初心，功成行满之士，要观其末路。 富贵家宜宽厚而反忌克，是富贵而贫贱，其行如何能享？聪明人宜敛藏而反炫耀，其病如何不败？ 人情反复，世路崎岖，行不去，须知退一步之法，行得去，务加让三分之功。 待小人不难于严，而难于不恶，待君子不难于恭，而难于有礼。 宁守浑噩而黜聪明，留些正气还天地；宁谢纷华而甘淡泊，遗个清明在乾坤。 降魔者先降其心，习伏则群魔退听，驭横者先驭其气，气平则外横不侵。 养弟子如养闺女，最要严出入，谨交游。若一接近匪人，是清净田中下一不净种子，便终身难植嘉苗矣。 欲路上事，毌乐其便而姑为染指，一染指便深入万仞，理路上事，毌惮其难而稍这退步，一退步便远千山。 念头浓者自待厚，待人亦太贵了，处处皆厚，念头淡者自待薄，待人亦薄，事事皆薄。故君子居常好，不可太浓艳，亦不宜太枯寂。 彼富我仁，彼爵人义，君子故不为君相所牢笼，人定胜天，志壹动气，君子亦不受迁化之陶铸。 立身不高一步立，如尘里振衣，泥中濯足，如何超达？处世不退一步处，飞蛾投烛，羝羊触藩，如何安乐？ 学者要收拾精神并归一处。如修德而留意于事功名誉，必无实谊；读书而寄兴于吟我雅，定不深心。 人人有个大慈悲，维摩屠刽无二心；处处有种真趣味，金屋茅檐非两地，只是欲闭情封，当面错过，便咫心千里矣。 进德修行，要个木石的念头，若一有欣羡便趋欲境；济世经邦，要段云水的趣味，若一有贪着合堕危机。 肝受病则目不能视，肾受病则耳不能听。病受于人所不见，必发于人所共见。故君子欲无得罪于昭昭，先无得罪于冥冥。 福莫福于少事，祸莫祸于多心，惟少事真的是方知少事之为福。惟平习者始知多之为祸。 处治世宜方，处乱世当圆，处叔季之世当方圆开用。待善人宜宽，待恶人当严，待庸众之人宜宽严互存。 我有功于人不可念，而一定要则不可不念，人有恩于我不可忘，而怨则不可不忘。 心地干净，方可读书学古，不然，见一善行，窃以济私，闻一善言，假以覆短。是又藉寇兵而盗粮矣。 奢者富而不足，何如俭者贫而有余，能者劳参见俯怨，何如拙者逸参见全真。 读书不见圣贤，如铅椠佣。居官不爱子民，如衣冠盗，讲学不尚躬行，如口头禅。立业不思种德。如眼前花。 人心有部真文章，都被残编简封固了，有部真鼓吹，都被妖歌艳舞湮没了。学者须扫除外物直觅本来，才有个酚受用，苦心中常得悦心之趣；和意量便一失意之悲。 富贵名誉自道德来者，如山林中花。自是舒徐。繁衍自功业来者，如盆槛中花，便有迁徙废兴，若以权力得者，其根不植，其萎可立而待矣。 栖守道德者，寂寞一时，依阿权势者凄凉万古，达人观物外之物，思身后之事，宁受一时之寂寞，毌取万古之凄凉。 春至时和，花尚铺一段好色，鸟且啭几句好音。士君子幸列头角，复遇温饱，不思立好言，行好事，虽是在世百年，恰似未生一日。 学者有段兢业的心思，又要有段潇 洒的趣味。若一味敛束清苦，是有秋杀无春生，何以发育万物。 真廉无廉名，立名者正所以为贪。大七无七术，用术者乃所以为拙。 心体光明，暗室中有青天，念头暗昧，白日下有厉鬼。 人知名位为乐，不知无名无位之乐为最真，人知饥寒为忧，不知不饥不守之忧为更甚。 为恶而畏人知，恶中犹有善路，为善而急人知，善处即是恶 根。 天之机缄不测，恶 中犹有善路。为善而急人知，善处即是恶 根。 福不可邀，养喜神以为招福之本，祸不可避，去杀杨以为远祸之方。 十语九中未必称厅，一语不中，则愆尤骈集，十谋九成未必归功，一谋不成则訾议丛兴，君子所以宁默毌吡躁，宁拙毌巧。 天地之气，暖则生，寒则杀，故性气清冷者，受享亦凉薄。惟气暖和之人，其福亦厚，其泽亦长。 天进路上甚宽，稍游心胸中，使觉广大宏朗；人欲路上甚窄，才寄迹眼前，俱是荆棘泥涂。 一苦一乐相磨练，练极而成福者，其福始久，一疑一信相参勘，勘极而成知者，其知始真。 地之秽者多生物，水之清者常无鱼，故君子当存含垢纳污之量，不可持好洁独行之操。 泛驾之马可就驱驰，跃冶之金张洋归型范。只一优游不振，便终身无个进步。白沙云，为人多病未足羞，一生无病是吾忧，真确实之论也。 人要一念贪私，便销刚为柔，塞智为昏，变恩为惨，染洁为污，坏了一生人品，故古人以不贪为宝，所以度越一世。 耳目见闻为外贼，情欲意识为内贼，只是主人以惺惺不昧，独坐中堂，贼便化为家人矣。 图未就之功，不如保已成之业。悔既往之失，亦要防将来之非。 气象要高旷，而不可疏狂。心思要缜缄，而不可琐屑。趣味要冲淡，而不可偏枯。操守要严明，而不可激烈。 风来疏竹，风过而竹不留声；雁度寒潭，雁去而潭不留影。故君子事来而心始现，事去而心随空。 清能有容，仁能善断，明不伤察，直不过矫。是曾用蜜饯不甜，海味不咸，才是懿德。 贫家净扫地，贫女净梳头。景色虽不艳，气度自是风雅。士君子当穷愁寥落，奈何辄自废弛哉！ 闲中不放过，忙中有受用。静中不落空，动中有受用。暗中不欺隐，明中有受用。 念头起处，才觉向欲路上去，便挽从理路上来，一起便觉，一觉便转，此是转祸为福，起死回生的关头，切莫当面错过。 天薄人以福，吾厚吾德以迓之，天劳人以形，吾逸吾心以补之，天扼人以遇，吾亨吾道以通之，天且奈我何哉！ 真士无心邀福，天即就无心处牖其衷，险人着意避祸，天即就着意中夺其魂，可见天之机权最神，人之智巧何益！ 声妓晚景从良，一世之烟花无碍，贞妇白头失守，半生之清苦俱非，语云:看人只看后半截，真名言也。 平民肯种务施惠，便是无位的卿相，仕夫徒贪权市宠，竟成有爵的乞人。 问祖宗之德泽，吾身所享者，是当念其积累之难，问子孙之福祉，吾身所贻者，是要思其倾覆之易。 君子而诈善，无异于小人之肆恶，君子而改节，不若不人之自新。 家人有过不宜〇扬，不宜轻信，此事难言，借他事而隐讽之，今日不悟，俟来日正警之。如春风之解冻、和气之消冰，才是家庭的型范。 此心常看得圆满，天下自无缺陷之世界，此心常放得宽平，天下自无险侧之人情。 淡薄之士，必为浓艳真的是所疑，检饬之人，多这放肆者所忌。君子处此固不可少变其操履，亦不可太露其锋芒。 居逆境中，周身皆针砭药石。砥节砺行而不觉，处顺境内，满前尽兵〇戈矛，销膏靡骨而不知。 生长富贵丛中的，嗜欲如猛火，权势似烈焰。若不带些清冷乞味，其为焰不至焚人，必将自焚。 人心一真，便霜可飞，城可陨，金石可贯，若伪妄之人，形骸徒具，真宰已亡。对人则面目可憎，独居则形影自愧。 文章做到极处，无有他奇，只是恰好，人品做到极处，无有他异，只是本然。 以幻迹言，无论功名富贵，即肢体亦属委，以真境言，无论父母兄弟，即万物皆吾一体，人能看得破，认得真，帮可以任一板一眼之负担，亦可脱世间之缰锁。 爽口之味，皆烂肠腐骨之药。五分便无殃，快心之事，悉败身散德之媒，五分便夫悔。 不责人小过，不发人阴私，不念人旧恶 ，三者可以养德，亦可以远害。 天地有万古，此身不再得；人生只百年，此日最易过，幸生其间者，不可不知有生之乐，亦不可不怀虚生之忧。 老来疾病都是壮时招各，衰时罪孽都是盛时作得，故持盈履满，君子尤兢兢焉。 市私恩不如扶公议，结新知不如敦旧好，立荣名不如种阴得，尚厅世不如谨行。 公平正论不可犯手，一犯手则遗羞万世，权门私窦不可着脚，一着脚则玷污终身。 曲意而使人喜，不若直世而使人忌，无美术部而致人誉，不如无恶而致人毁 。 处父兄骨肉之变，宜从容不宜激烈，遇朋友交游之失，宜剀切为且优游。 小处不渗漏，暗处不欺隐，末路不怠荒，才是真正英雄。 惊奇喜异者，终无远大之识，苦世独行者，要有恒久之操。 当怒火欲水正腾沸时，明明知得，又明明犯着，知得是谁，犯着又是谁。此处能猛然转念，邪魔便为知真君子矣。 毋偏信而为奸所欺，毋自任而为气所使，毋以已之长而形人之短，毋因已之拙而忌人之能。 遇沉沉不语之人士，且莫输心，见悻悻自好之人，应须防口。 念头昏散处，要知提醒，念头吃紧时，要知放下，不然恐去昏昏之病，又来憧憧之扰矣。 霁日青天，倏变为迅雷震电，疾风怒雨，倏转为朗月晴空，气杨何尝一毫凝滞，太虚何尝一毫障蔽，人之心体亦当如是。 胜私制之功，有曰识不早，力不易者，有曰识得破，忍不过者，盖识是一 颗照魔的明珠，力是一把斩魔的慧剑，两不可少也。 横逆困穷，是煅炼豪杰的一副炉锤，能受其煅炼 者，则身心受益；不受其煅炼者，则身心交损。 害人之心不可有，防人之心不可无。此戒疏于虑者，宁受人之欺，毌逆人之诈，此警伤于察者。二语并存，精明浑厚矣。 毌因群疑面阻独见，毌任已而废人言，毌私不惠而伤大体，毌借公论以快私情。 善人未能急亲，为宜预扬，恐来谗谮之奸，恶人未能轻去，不宜先发，恐招媒孽之祸。 青天白日的节义，自暗室屋漏中培来，旋乾坤的经纶，从临深履薄中操出。 父慈子孝，兄友弟恭，纵做到极处，俱是合当如是，着不得一毫感激的念头。如施者任德，受者怀恩，便是路人，便成市道矣。 炎凉之态，富贵更甚于贫贱，妒忌之心，骨肉尤狠于外人，此处若不当以冷肠，御以平气，鲜不日坐烦恼障中矣。 功过不宜少混，混则人怀惰隳之心，恩仇不可太明，明则人起携贰之志， 恶忌阴，善忌阳，故恶之显才祸浅，而隐者祸深，善之显者功小，而隐者功大。 德者才之主，才者德之奴。有才无德，如家无主而奴用事矣。几何不魍魉猖狂。 锄奸杜幸，要放他一条去路。若使之一无所容。便如塞鼠穴者，一切去路都塞尽，则一切好物都咬破矣。 士君子不能济物者，遇人痴迷处，出一言提醒之，遇人急难处，出一言解救之，亦是无量功德矣 。 处已者触事皆成药石，尤人者动念即是戈矛，一以辟众善之路，一以浚诸恶 之源，相去霄壤矣。 事业文章随销毁，面精神万古如新，功名富贵〇世转移，而气节千载一时，群信不以彼易此也。 鱼网之设，鸿则罹其中，螳螂这贪，雀又乘其后，机里藏机变外生变，智巧何足恃哉。 作人无一点直恳的念头，便成个花子，事事皆虚，涉世无一段圆活的机趣，便是个木人，处处有碍。 事有急之不白者，宽之或自明，毌躁急以速忿；人有切之不从者，纵之或自化，毌操切以益其顽。 节义〇青云，文章高白雪，若不以德性陶镕之，终为血我愤怒之私，技能之末。 谢事不谢于正盛之时，居身宜于独后之地，谨德月布谨于至微之事，施恩务施于不报之人。 德者事业之基，未有基不固而栋宇坚久者，心者修裔之根，未有根不植而枝叶茂者。 道是一件公众的物事，当随人而接引，学是一个寻常的家饭，当姑且事而警惕。 念头宽厚的，如春风煦育，万物遭之而生，念头忌克的，如朔雪阴凝，万物遭之而死。 勤都跟敏于德义，而世人借勤 以济其贪，俭者淡于货利，而世人假以饰其吝。君子持身之符，反为小人营私之具矣。异哉！ 人之过误宜恕，而在已则不可恕，已 之困辱宜忍，而在人则不可忍。 恩宜自淡而浓，先浓后淡者人忘其惠，威宜自严而宽，先宽后严者人怨其酷。 士君子处权门要路，操履要严明，心气要和易，毌少随而近腥膻之党，亦毌过激而犯蜂之毒。 遇欺诈的人，以诚心感动之，遇〇戾的人，以和气田蒸之；遇倾邪私曲的人，以名义气节激励之。天下无不入我陶熔中矣。 一念慈祥，可以酝酿两间和气，寸心洁白，可以昭垂百代清芬。 阴谋怪习，异行奇能，俱是涉世的祸胎，只一个庸德庸行，便可以完混沌而招和平。 语云；登山耐险路，踏雪耐危桥。一耐字极具意味。如倾险之人情、坎坷之世道，若不得一耐字撑持过去，几何不坠入榛莽坑堑哉！ 夸逞功业炫耀文章，毕是靠外物做人。不知心体莹然，本来不失，即无寸功只字，亦自有堂堂正正做人处。 不昧已心，不拂人情，不竭物力，三者可以为天地立心，为生民立命，为妇录造福。 居官有二语曰：惟公则生明，惟廉则生威。居家有二语：惟恕则平情，惟俭则足用。 处富贵之地，要行贫贱的痛痒，当少壮之时，须念〇老的辛酸。 持身不可太皎洁，一切污辱垢秽要茹纳的，与人不可太分明，一切善恶贤愚要包容。 休与小人仇雠，粘人自有对头，休向君子谄媚，君子原无私惠。 磨砺当如百炼之金，急就者非邃养施为宜，似千钧之弩，轻发者无宏功。 建功立业者，多虚圆之士，偾事夫机者，必执拗之人。 俭，美德也，过则为悭吝、为鄙啬，反伤雅道，让，懿行也，过则为足恭，为曲礼，多出机心。 毌忧拂意，毌喜快心，毌恃久安，毌惮初难。 饮宴之乐多，不是个好人家，声华之习胜，不是个好士子，名位之念重，不是个好臣工。 仁人心地宽舒，鲁福厚而庆长，事事成个宽舒气象，鄙夫念头迫，便䘵而泽短，事事成个迫促规模。 用人不宜刻，刻则思效者去，交友不宜滥，滥则贡谀者来。 大人不可不畏，畏大人则无放逸之心，小民亦不可不畏，畏小民则无豪横之名。 事捎拂逆，便思不那好吧人的人，则怨尤自消，心稍怠荒，便思胜 似我的人，则精神自奋。 不可乘喜而轻诺，不可因醉而生瞋，不可乘快而多事，不可因倦而鲜终。 钓水，逸事也，尚持生杀之柄，弈棋，清戏也，且动战争之心，可见喜事不如省事之为适，多能不如无能之全真。 听静夜之钟声，唤醒梦中之梦，观澄潭之月影，窥见身外之身。 鸟语虫声，总是传心之诀，花英草色，无非见道之文，学者要天机清彻，胸次玲珑，触物皆有会心处。 人解读有字书，不解读无字书，知弹有弦琴，不知弹无弦琴。以迹用不以神用，何以得琴书佳趣？ 山河大地已属微尘，而况尘中之尘！血肉身躯且归泡影，而况影外之影！非上上智，无了了心。 石火光中，争长兢短，几何光阴？蜗牛角上，较雌论雄，许大世界？ 有浮云富贵之风，而不必岩栖穴处，无膏盲泉石之癖，而常自醉酒耽诗。兢逐听人而不嫌尽醉，恬澹适而不夸独醒贴纸释氏所谓不为法缠，不为空缠，身心两自在者。 延促由于一念，宽窄系之寸心。故机闲者一日遥于千古，意宽者斗室广于两间。 都来眼前事，知足者仙境，不知足者凡境，总出世上因，善用者生机，不美术部用者杀机。 趋之附势之祸，甚惨亦甚速，栖恬守逸之味，最淡亦最长。 色欲炎炽，而一念及病时，便兴似寒灰，名利饴甘，而一想到死地，鲁味如咀蜡。故人常忧虑病，亦可消幻业而长道心。 争先的径路窄，退后一步自宽平一步，浓艳的滋味短，清淡一分自悠长一分。 隐逸林中无荣辱，道 义路上泯炎凉。进步便思退步，庶免触藩之祸。着手时光图放手，才脱骑虎之危。 贪得者分金恨不得玉，封公怨不授侯，权豪自甘乞丐，知足者藜羹旨于膏梁，布袍暖于狐貉，编民不让王公。 矜名不如逃名趣，练事何如省事闲，孤云出岫，去留一无所系，朗镜悬空，静躁两不相干。 山林是胜地，一营恋便成市朝；书画是雅事，一贪痴便成商贾。盖心无染着，俗境是仙都，习有丝牵，乐境成悲地。 时当喧杂，则平日所记忆者皆漫然忘去，境在清宁，则夙昔所遗忘者又恍尔现前。可见静躁稍分，昏明顿异刀。 芦花被下卧雪眠云，保全得一窝夜气，竹叶杯中吟风弄月，躲离了万丈红尘。 出世之道 ，即在涉世中，不必绝人以逃世，了心之功即在尽心内，不必绝欲以灰心。 此身常放在闲处，谁能差遣我？此心常安在静中，是非利害，谁能瞒味我？ 我不希荣，何忧乎利䘵之香饵，我不兢进，何畏乎仕宦之危机。 多藏厚亡，故知富不如贫之列虑，高步疾颠，故知贵不如贱炎常安。 世上只缘认得我字太真，故多种种嗜好，种种烦恼，前人云，不复知有我，安知物为贵，又云，知身不是我，烦恼更何侵，真破的之言也。 人情世态，倏忽万端，不宜认得真，尧夫支：昔日所云我，今朝却是伊，不知今日我，又属生来谁？人常作是观，便可解却胸罥却胸罥矣。 有一乐境界，就有一不乐的相对待，有一好光景，就有一不好的相乘除。只是寻常家饭，素位风光，才是个安乐窝巢。 知成之必败，则求成之心不必太坚，知生之心死，则保生之道不必过劳。眼看西晋之荆榛，犹矜白刃，身属北邙之狐兔，尚惜黄金。语去，猛兽易伏，人心难降，溪壑易填，人心不满。信哉！ 心地上无风涛，随在皆青山绿树，性天中有化育，触处都鱼跃鸢飞。 狐眠败砌，兔走荒参，尽是当年歌舞之地，露冷黄花，烟迷衰草，悉属旧时争战之场。盛衰何常，强弱安在，念此令人心灰。 宠辱不惊，头看庭前花开花落，去留无意，漫随天外云卷云舒。 晴空朗月，何天不可翱翔，而飞蛾独役夜烛，清泉绿竹，何物不可饮啄，而鸱鸮偏嗜腐鼠。噫！世之不为飞蛾鸱鸮者，几何人哉！ 权贵龙骧，英雄虎战，以冷眼视之，如聚膻，如蚁兢血，是非蜂起，得失猥兴，以冷情当之，如冶化金，如汤消雪。 真空不空，执相非真，破相亦非真，问世情如何发付？在世出世，徇俗是苦，绝俗亦是苦，听吾侪善自修持。 烈士让千乘，贪夫争一文，人吕星渊也，而好名不殊好利，天子营家国，乞人号饔飧，信分霄壤也，而焦思何异焦声。 性天澄彻，即饥餐渴饮，无非康济身心，心地沉迷，纵演偈淡禅，总是播弄精魄。 人心有真境，非丝非竹而自恬愉，不烟不苟而自清芬。须念净境空，谍忘形释，才得以游衍其中。 天地中万物，人伦中万万情，世界中万事，以俗眼观，纷纷各异，以道眼观，种种是常，何须分别，何须取舍。 缠脱只在自心，民了则屠肆糟糠居然净土，不然纵一琴一鹤，一花一竹，嗜好虽清，魔障终在。语云：能休尘境为真境，未了僧家是俗家。 以我转物者得，固不喜失亦不忧，大地尽属逍遥；以我役我者逆，固生憎顺亦生爱，一毫便生缠缚。 试思未生之前有何象貌，又思既死之后有何景色，则万念灰冷，一性寂然，自可超物处而游象先。 优人傅粉调朱，效妍丑于毫端。俄而歌残场罢，妍丑何存？弈者争先兢后，较雌雄于着手。俄而局尽子收，雌雄安在？ 把握未定，宜绝迹尘嚣，使此心不见可欲而不乱，以澄吾静体；操持既坚，又当混迹风尘，使此心见可欲而亦不乱，以养吾圆机。 喜寂厌喧者，往往避人以求静。不知意在无人，便成我相，心着于静，便是动根。如何到得人我一空，动静两忘的境界！ 人生祸区福境，皆念想造成。故释氏云：刊欲炽然，即是火坑。贪爱沉溺，便为苦海。一念清净，烈焰成池。一念惊觉，航登彼岸，念头稍异，境界顿殊。可不慎哉@！绳锯材断，水滴石穿，学道者须要努索；水到渠成，瓜熟蒂落，得道者一任天机。 就一身了一身者，方能以万物付万物，还天下于天下者，方能出世间于世间。 人生原是傀儡，只要把柄在手，一线不乱，卷舒自由，行止在我，一毫不受他人捉掇，鲁超此场中矣。 ”为鼠常留饭，怜蛾不点灯“，古人此点念头，是吾一点生生之机。列此即扣谓土木形骸而已。 世态有炎凉，而我无嗔喜，世味有浓淡，而我无欣厌。一毫不落世情窠臼，便是一在世出世法也。  "},{"id":48,"href":"/posts/dao-de-jin/","title":"道德经","section":"Blog","content":" 道，可道也，非恒道也。名，可名也，非恒名也。“无”，名天地之始；“有”，名万物之母。故，常“无”，欲以观其妙；常“有”，欲以观其徼。此两者，同出而异名，同谓之玄。玄之又玄，众妙之门。 天下皆知美之為美，斯恶已。比特知善之为善，斯不善已。有无相生，给易相成，长相形，高下相盈，音声相和，前后相随。恒也。是以圣人处无为之事，行不言之教；万物作而弗始，生而弗有，為而弗恃，功成而不居。夫唯弗居，是以不去。 不尚贤，使民不争；不贵难得之货，使民不為盗；不见或欲，使民心不乱。是以圣人之治，虚其心，实其腹，弱其志，强其骨。常使民无知无欲。使夫智者不敢為也。為无為，则不治。 道冲，而用之或不盈。渊兮，似万物之宗。挫其锐，解其纷，和其光，同其尘。湛兮，似或存。吾不知谁之子，象帝之先。 天地不仁，以万物為芻狗；圣人不仁，以百姓為芻狗。天地之间，其犹橐籥乎？虚而不屈，动而愈出。多言数穷，不如守中。 谷神不死，是谓玄牝。玄牝之门，是谓天地之根。绵绵若存，用之不勤。 天长地久。天地所以能长且久者，以其不自生，故长生。是以圣人后其身而身先；外其身而存。非以其无私邪？故能成其私。 上善若水，水善利万生而不争。处眾人之所恶，故几於道。居善地，心善渊，与善仁，言善信，政善治，事善能，动善时。夫唯不争，故无尤。 持而盈之，不如其已。揣而锐之，不可长保。金玉满堂，莫之能守。富贵而骄，自遗其咎。功成身退，天之道。 载营魄抱一，能无离乎？专气致柔，能婴儿乎？涤除玄鉴，能无疵乎？爱民治国，能无为乎？天门开阖，能為雌乎？明白四达，能无为乎？生之，畜之。生而不有，为而不恃，长而不宰，是谓玄德。 三十辐共一毂，当其无，有车之用。埏埴以为器，不其无，有器之用，凿户牖以为室，当其无，有室之用，故有之以为利，无之以为用。 五色令人目 盲，五音令人耳聋，五味令人口爽，驰骋畋猎令人心发狂，难得之货令人行妨。是以圣人为腹不为目，故去彼取此。 宠辱不惊，贵大患苈身，何谓宠若惊？宠为下，得之若惊，失之若惊，是谓宠辱若惊。何谓大患若身？ 视之不见名曰夷，听之不闻名曰希，搏之不得名曰微。此三者，不可致诘，故混而为一，其上不皦，戎下不昧，绳绳不可名，复归于无物，是谓无状之状，无物之象，是谓惚恍。迎之不见其首，随之不见其后。执古之道，以御今之有，能知古始，是谓道纪。 古之为善为士者，微妙玄通，深不可识，夫唯不楞识，故强为之容：䂊兮若冬涉川，犹兮若畏四邻，俨兮其若客，涣兮若冰之将释，敦兮其若朴，浑兮其若浊，孰能浊以静之徐 清？孰能安以久动之徐生？保此道者不欲盈，故能蔽不新成。 致虚极，守静笃。万物并作，吾以观复，无物芸芸，各复归鞭根。归根曰静，是曰复命，复命曰常，知常曰明，不知常，妄作凶。知常容，容乃公，化乃王，王乃天，天乃道，道乃久，没身不殆。 大上，下知有这，其次亲而誉之，其次畏之，其次侮之，信不足焉，有不信焉。悠兮其贵言，功成事遂，百姓皆谓我自然。 大道废，有仁义；智慧出，有大伪，六亲不各，有孝慈；国家昏乱，有忠臣。wyl 绝圣弃智，民利百倍；绝仁弃义，民复孝慈；绝巧弃利，盗贼无有。此三者以为文不足，故令有所属：见素抱朴，少私欲。 绝学无忧，唯之与阿，相去几何？善之与恶，相去若何？人之所畏，不可不畏，荒兮其未央哉！众人熙熙，如享太牢，如春登台。我独泊兮其未兆，如婴儿未孩；儽儽兮，若无所归，众人皆有余，而我独若遗。我愚人之心也哉！沌沌兮，俗人昭昭，我独若昏。俗人察察，我独闷闷。澹兮其若海，飂兮若无止。众人皆有以，而我独顽似鄙。我独异于人，而贵食母。 孔德之容，惟道是从。道之为物，惟恍惟惚。惚兮恍兮，其中有象；恍兮惚兮，其中有物。窈兮冥兮，其中物精；其精甚真，其中有信。自今及古，其名不去，以阅众甫。吾何以知众甫之状哉？以此。 曲则全，枉则直，洼则盈，敝则新，少则得，多则惑。是以圣人抱一为天下式。不自见明，不自是故彰，不自伐故有功，不自矜故长。夫唯不争，故天下莫能与之争。古之所谓曲则全者，岂虚言哉！诚全而归之/ 希言自然。故飘风不终朝，骤雨不终日。孰为此者？天地，天地尚不能久，而况于人乎？故从事于道者，道 者同于道，德者同于德，失者同于失。同于道者，道亦乐得之；同于德者，德亦乐得之；同于失者，失亦乐得之。信不足焉，有不信焉。 企者不立，跨者不行，自见者不明，自是者不彰，自伐者无功，自矜者不长。其在道也，曰余食赘行，物或恶之，故有道者不远。 有物混成，先天地生，寂兮寥兮，独立而不改，周行而不殆，可以为天下母。吾不知其名，字之曰道，强为之名，曰大，大曰逝，逝曰远，远曰反。故道 大，天大，地大，王亦大。域中有四大，而王居其一焉。人法地，地法天，天法道，道 法自然。 重为轻根，静为躁君。是以圣人终日行不离辎重。虽有荣观，燕处超然，奈何万乘之主，而以身轻天下？轻则失本，躁则失君。 善行无辙迹，善言无瑕谪；善数不用筹策，善闭无关楗而不可开。善结无绳约而不可解，是以圣人常善救人，故无弃人，常善救物，故无弃物，是谓袭明，故善人者，不善人之师；不善人者，善人之资。不贵其师，不爱其资，虽智大迷。是谓要妙。 知其雄，守其雌，为天下溪，为天下溪，常德不离，复归于婴儿，知其白，守其黑，为天下式。为天下式，常德不忒，复归于无极，知其荣，守其辱，为天下谷，常德乃足，复归于朴。枚散则为器，圣人用之，则为官长，故大制不割。 将欲取天下而为之，吾见其不得已，天下神器，不可为也，为者败之，执者失之，故物或行或随，或歔或吹，呀强或赢，或挫或隳，是以圣人去甚，去奢，去泰/ 以道佐人主者，不以兵强天下，其事好还。师之所处，荆棘生焉，大军之后，必有凶年。善者果而已，不以取强。果而勿伐，果而勿骄，果而不得已，果而勿强，物壮则老，是谓不道，不道早已。 夫佳兵者，不祥之器，物或恶之，帮，有道者为处，君子居则贵左，用兵则贵右，兵者不祥之器，非君子之器，不得已而用恬淡为上，胜而不美，而美之在短时间内，是乐杀人。夫乐杀人者，则不可以得志于天下矣。吉事尚左，凶事尚右，偏将军居左，上将军居右，言以丧礼处之，杀人之众，以哀悲泣之，战胜，以丧礼处之。 道常无名，朴虽小，天下莫能臣也，侯王若能守之，万物瘵自宾，天地相合，以降甘露，民莫之令而自均。始制有名，名亦既有，夫亦将知止，刮目所以不殆，譬道之在天下，犹川谷之天江海。 知人者智，自知者明。胜人者有力，自胜者强，知足者富。强行者有志，不失其所者久，死而不亡者寿， 大道氾兮，其可左右。万物恃之而生而不辞，功成不名有，衣养万物而不为主，常无欲，可名于小，万物归焉不为主，可名为大。以其终不自为大，故意能成其大。 执大象，天下往。往而不害，安平。乐与饵，过客止，道之出口，淡乎其无味，视之不足见。听之不足闻，用之不可即。 将欲歙之，必固张之；将欲弱之，必固强之；将欲废之，必固兴之，将欲夺之，必墨西哥与之，是谓微明。柔弱胜刚强，鱼不可脱于渊，国之利器不可以示人。 道常无为而无不为，；侯王若能守之，万物将自化，化而欲作，吾将镇之以无名之朴，无名之朴，夫亦将无欲，不欲以静，天下将自定。 上德不德，是以有德；下德不失德，是以无德，上德无为而无以为；下千为之而有以为，上仁为之而无以为，上义为之而有以为，上礼为之而莫之应，则攘臂而之，故失道而后德。失德而后仁，失仁而后义，失义而后礼。夫礼者，忠信之薄，而乱之首，前识者，道之华，而愚之始，是以大丈夫处其厚，峭居其薄；处其实，不居其华，故去彼取此。 昔之得一者，天得一以清，地得一以宁。神得一以灵，谷得一以盈。万物得一以生，侯王得一以为天下贞。其致之，天无以清将恐裂，地无以宁将恐发，神无以灵将恐歇，谷无以盈将黄熟竭，万物无以生将恐灭，侯王 无以贵高恐蹶。故意贵以贱为本，高以下为基，是以〇王自称孤、〇、不谷，此非以贱为本邪？此非以贱为本邪？非乎？故意致数〇无〇，不欲〇〇玉，珞珞如石。 反者道之动，弱者道之用。天下万物生于有，有生于无。 上士闻道，勤而行之，中士闻道，若存若亡；下士闻道，大笑之。不笑，不足以为道，故建言有之：明道若昧，光而不耀，进道若退，夷道若纇，上德若谷，大白若辱，广德若不足，建德若偷，质真若渝，大方无隅，大器晚成，大音希声，大象无形，道 隐无名，夫唯道，善贷且成， 道生一，一生二，二生三，三生万物。万物负阴而抱阳，冲气以为和，人之所恶，唯孤、寡、不谷，而王公以为称，故物或损之而益，或益之而损，人之所教，人亦教之。强梁者不处其死，吾将以为教父。 天下至柔，驰骋天下之至坚，无有入无闲，不言 之教，无为之益，天下希及之。 名与身孰亲？身与货孰多？得与亡孰病？是故甚爱必大费，多藏必厚亡，知足不辱，知止不殆，可以长久。 在成若缺，其用不弊，大盈若冲，其用不穷，大直若屈，大巧若拙，左辩若讷，大辩因物而言，已无所造，故若讷也，躁胜寒，静胜热，清静这天下正。 天下有道，却走马以粪，天下无道，戎马生于郊，祸莫大于不知足，咎莫大于欲得，故知足之足，常足矣。 不出户，知天下，不窥牖，见天道，其出弥远，其知弥少，是以圣人不行而知，不见而名，不为而成。 为不学日益，为道日损，损之又损，以至于无为，无为而无不为，取天下常无事，及其有事，不足以取天下， 圣人无水常心，以百姓心为心，善者，吾善之，不善者，吾亦善之，德善，信者，吾信之，不信者，吾亦信之，德信，圣人在天下，歙歙为五，浑其心，百姓皆注其耳目，圣人皆孩之。 出生入死，生之徒，十有三，死之徒，十有三，人之生，动之死地，亦十有三，夫何故》以其生生之厚，盖闻善摄生者，陆行不遇兕虎，入军不被甲兵，兕无所投其角，虎无所措其爪，兵无所容其刃，何以故？巴斯夫 夫死地。 道生之，德畜之，物形之，势成之，是以万物莫不尊道参展贵德，道之尊，德之贵，夫莫之命而常自然，故道之，德畜之，找之育之，亭之毒之，养之覆之，生而不有，为而不恃，这而不有，长而不宰，是谓玄德。 天下有始，以为天下母，既得其母，以知其子，既知其子，复守其母，没身不殆，塞其兑闭其门，终身不勤，开其兑，见小曰明，守柔曰强，用其光，复归其明无遗身殃，是为习常。 使人介然有知，行于大道，唯施是畏，大道 甚夷，而民好径，朝甚除，田医者仁心芜，仓甚虚，服文彩，带利剑，厌饮食，财货有余，是这夸盗，非道也哉！ 善建者不拔，善抱者不脱，子孙以祭祀不辍，修之于身，其德乃真，修之于家，其德乃余，修之于乡，其德乃长，修之于国，共德乃丰，修之于天下，其德乃普，故以身观身，以家观家，以乡观乡，以国观国，以天下观天下。吾何以行天下然哉？以此。 含德之厚，比于赤子，蜂虿虺蛇不螫，猛兽不据，攫鸟不搏，骨弱筋柔而握固。未知牝牡之合而全作，清之至也，张洋日号而不嗄，和之至也，知和曰常，知常曰明，益生曰祥，心使气曰强，物壮则老，谓之不道，不道 早已。 知者不言，言者不和，塞其兑，闭其门，挫其锐，解其分，和其光，同其尘，是谓玄同，故不可得而亲，不可得而疏；河得而利，不可得而害，不可得而贵，不可得而贱，故为天下贵。 以正治国，以奇用兵，以无事取天下，吾何以知其然哉？以此，天下多忌讳，而民弥贫，民多利器，国家滋昏，人多伎巧，奇物滋起，法令滋彰，盗贼多有，故圣人云：“人无为而民自化，人好静而民自富，人无欲而民自朴。” 其政闷闷，其民淳淳；其政察察，其民缺缺。祸兮福之所倚，福兮祸之所伏，孰知其极？其无正，正复为奇，美术部复为妖，人之迷，其日固久，是以圣人方而不割，廉而不刿，直而不肆，光而不耀。 治人事天，莫若啬，夫唯啬，是谓早服；早服谓之重积德；重积德则无不克，无不克则莫知其极；莫条其极，可以有国，有国之母，可以长久，是谓深根固柢，长生久视之道。 治大国，若烹小鲜，以道莅天下，其鬼不神，治大国则若烹小鲜，以道莅天下则其鬼不神也，非其鬼不神，其神伤人，非其神不伤人，圣人亦不伤人，夫两不相伤，故德交归焉。 大国者下流，天下之交，天下之牝，牝常以静胜为下，故大国以下小国，则取小国，小国以下大国，则取大国，故或下以取，或下而取，大国不过欲兼畜人，小国不过欲入事人，夫两者各得其所欲，大者宜为下。 道者万物之奥，善人之宝，不善人之所保，美言可以市尊，行可以加人，人之不善，何弃之有？故立天子，置碱公，虽有拱璧以先驷马，不如坐进此道，古之所以贵此道者何？不曰：以求得，有罪以免邪？故为天下贵。 为无为，事无事，味，无味，大小多少，报怨以德，图难于其易，为大于其细，天下难事必作于易，天下大理必作于细，是以圣人终不为大，故能成其大，夫轻诺必寡信，多易多难，是以圣人犹难之，故终无难矣 其安易持，其未兆易谋，其脆易泮，其微易散，为之于未有，治之于未乱，合抱之木，生于毫末，九层之台，起于累土，千里之行，始于足下，为者败之，执者失之，是以圣人无为故无败，无执帮无失，民之从事，常于几成而败炎，不慎终也，慎终如始，则无孜事，是以结城人欲不欲，不贵级得之货，学不学，复众人所过，以辅万物之自然，而不敢为。 古之善为道者，非以明民，将以愚之，民之难治，以其智多，故以智治国，国之贼；不以智治国，国之福。知此两者亦稽式，常知稽式，是谓玄德，玄德深矣，远矣。与物反矣，然后乃大顺。 江海所以能为百谷王者，以其美术部下之，故能为百谷王，是以欲上民，必以言下之，欲先民，必以身后之，是以圣人下上而民重，处前而民不害，是以天下乐推而不厌，以其不争，故天下莫能与之争。 天下皆谓我大，似不肖，夫唯大，故似不肖，若肖，久矣其细也夫！我有三宝，持而保之，一曰慈，夺曰俭，三曰不敢为天下先，慈故能勇；俭故能广，不敢为天下先，故能成器长，今舍慈且勇，舍俭且广，舍生且先，死矣！夫慈以战则胜，以守则固，天将救之，以慈卫之。 善为士者不武，美术部战者不怒，善胜敌者不与，善用人者为之下，是谓不争之德，谓用从之力。配天，古之极。 用兵有言：“吉不敢为主而为客，不敢进寸而退尺”是谓行无行，攘无臂，扔无敌，执无兵，祸莫大于轻敌，轻敌几丧吾宝，故抗兵相加，哀者胜矣。 吾言甚易知，甚易行，天下莫能知，莫能行，言有宗，事有君，夫唯无知，是以不我知，知我才希，则我者贵。是以圣人被褐怀玉。 知不知止，不知知病，夫唯病病，是以不病，圣人不病，以其病病，是以不病。 民不畏威，则大威至，无狎其所居，无厌其所生。夫唯不厌，是以不厌，是以圣人自知不自见，自爱不自贵，故去彼取此。 勇于敢则杀，勇于不敢则活，此两者或利或害，天之所恶，孰知其故？是以圣人犹难之，天之道 ，不争而善胜，不言而善应，不召而自来，〇 0 然而善谋，天网恢恢，疏而不失。 民不畏死，奈何以死惧之？若使民常畏死，而为奇者，吾得执而杀之，孰敢？常有司杀者杀，夫代司杀者杀，是谓代大匠斲，无代大匠斲者，希有不伤其手矣。 民之饥，以其上食税之多，是以饥。民之难治，以其上之有为，是以难治，民之轻死，以其求生之厚，是以轻死，夫唯无以生为者，是贤于贵生。 人之生也柔，其死也坚强，万物草木之生也柔脆，其死也枯槁，故坚强者死之徒，柔弱者生之徒，是以兵强则不胜，木强则兵折，强大处下，柔弱处上。 天之道，共犹张弓与？高者抑之，下者举之，有余者损之，不足者䃼之，天之道，损有余而䃼不足，人之道 则不然，损不足以奉有余，孰能有余以奉天下，唯有道 者，是以圣人为而不恃，功成而不处，其不欲见贤。 天下莫柔弱于水，而攻坚强在短时间内莫之能胜，其无以易之，弱之胜强，柔之胜刚，天下莫不知莫能行，是以圣人云：“受国不垢，是谓社稷主，受国不祥，是不天下王”。正言若反。 和大怨，必有余怨，安可以为善？是以圣人执左契，而不责于人，有德司契，无德司彻。天道无亲，常与善人。 小国寡民，使有什伯之器而不用，使民重死而不远徙。虽有舟舆，无所舆之，虽有甲兵，无所陈之，使人复结绳而用之，甘其食，美其服，安鞭居，乐鞭俗，邻国相望，鸡犬之声相闻，民至老死，不相往来。 信言不美，美立不信。善者不辩，辩者不善，知者不博，博者不知。圣人不积，既以为人已愈有，既以与人已愈多，天之道 ，利而不害，圣人之道 ，为而不争。  "},{"id":49,"href":"/posts/goisforlovers/","title":"(Hu)go Template Primer","section":"Blog","content":"Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.\nThis document is a brief primer on using Go templates. The Go docs provide more details.\nIntroduction to Go Templates #  Go templates provide an extremely simple template language. It adheres to the belief that only the most basic of logic belongs in the template or view layer. One consequence of this simplicity is that Go templates parse very quickly.\nA unique characteristic of Go templates is they are content aware. Variables and content will be sanitized depending on the context of where they are used. More details can be found in the Go docs.\nBasic Syntax #  Golang templates are HTML files with the addition of variables and functions.\nGo variables and functions are accessible within {{ }}\nAccessing a predefined variable \u0026ldquo;foo\u0026rdquo;:\n{{ foo }}  Parameters are separated using spaces\nCalling the add function with input of 1, 2:\n{{ add 1 2 }}  Methods and fields are accessed via dot notation\nAccessing the Page Parameter \u0026ldquo;bar\u0026rdquo;\n{{ .Params.bar }}  Parentheses can be used to group items together\n{{ if or (isset .Params \u0026quot;alt\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;) }} Caption {{ end }}  Variables #  Each Go template has a struct (object) made available to it. In hugo each template is passed either a page or a node struct depending on which type of page you are rendering. More details are available on the variables page.\nA variable is accessed by referencing the variable name.\n\u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt;  Variables can also be defined and referenced.\n{{ $address := \u0026quot;123 Main St.\u0026quot;}} {{ $address }}  Functions #  Go template ship with a few functions which provide basic functionality. The Go template system also provides a mechanism for applications to extend the available functions with their own. Hugo template functions provide some additional functionality we believe are useful for building websites. Functions are called by using their name followed by the required parameters separated by spaces. Template functions cannot be added without recompiling hugo.\nExample:\n{{ add 1 2 }}  Includes #  When including another template you will pass to it the data it will be able to access. To pass along the current context please remember to include a trailing dot. The templates location will always be starting at the /layout/ directory within Hugo.\nExample:\n{{ template \u0026quot;chrome/header.html\u0026quot; . }}  Logic #  Go templates provide the most basic iteration and conditional logic.\nIteration #  Just like in Go, the Go templates make heavy use of range to iterate over a map, array or slice. The following are different examples of how to use range.\nExample 1: Using Context\n{{ range array }} {{ . }} {{ end }}  Example 2: Declaring value variable name\n{{range $element := array}} {{ $element }} {{ end }}  Example 2: Declaring key and value variable name\n{{range $index, $element := array}} {{ $index }} {{ $element }} {{ end }}  Conditionals #  If, else, with, or, \u0026amp; and provide the framework for handling conditional logic in Go Templates. Like range, each statement is closed with end.\nGo Templates treat the following values as false:\n false 0 any array, slice, map, or string of length zero  Example 1: If\n{{ if isset .Params \u0026quot;title\u0026quot; }}\u0026lt;h4\u0026gt;{{ index .Params \u0026quot;title\u0026quot; }}\u0026lt;/h4\u0026gt;{{ end }}  Example 2: If -\u0026gt; Else\n{{ if isset .Params \u0026quot;alt\u0026quot; }} {{ index .Params \u0026quot;alt\u0026quot; }} {{else}} {{ index .Params \u0026quot;caption\u0026quot; }} {{ end }}  Example 3: And \u0026amp; Or\n{{ if and (or (isset .Params \u0026quot;title\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;)) (isset .Params \u0026quot;attr\u0026quot;)}}  Example 4: With\nAn alternative way of writing \u0026ldquo;if\u0026rdquo; and then referencing the same value is to use \u0026ldquo;with\u0026rdquo; instead. With rebinds the context . within its scope, and skips the block if the variable is absent.\nThe first example above could be simplified as:\n{{ with .Params.title }}\u0026lt;h4\u0026gt;{{ . }}\u0026lt;/h4\u0026gt;{{ end }}  Example 5: If -\u0026gt; Else If\n{{ if isset .Params \u0026quot;alt\u0026quot; }} {{ index .Params \u0026quot;alt\u0026quot; }} {{ else if isset .Params \u0026quot;caption\u0026quot; }} {{ index .Params \u0026quot;caption\u0026quot; }} {{ end }}  Pipes #  One of the most powerful components of Go templates is the ability to stack actions one after another. This is done by using pipes. Borrowed from unix pipes, the concept is simple, each pipeline\u0026rsquo;s output becomes the input of the following pipe.\nBecause of the very simple syntax of Go templates, the pipe is essential to being able to chain together function calls. One limitation of the pipes is that they only can work with a single value and that value becomes the last parameter of the next pipeline.\nA few simple examples should help convey how to use the pipe.\nExample 1 :\n{{ if eq 1 1 }} Same {{ end }}  is the same as\n{{ eq 1 1 | if }} Same {{ end }}  It does look odd to place the if at the end, but it does provide a good illustration of how to use the pipes.\nExample 2 :\n{{ index .Params \u0026quot;disqus_url\u0026quot; | html }}  Access the page parameter called \u0026ldquo;disqus_url\u0026rdquo; and escape the HTML.\nExample 3 :\n{{ if or (or (isset .Params \u0026quot;title\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;)) (isset .Params \u0026quot;attr\u0026quot;)}} Stuff Here {{ end }}  Could be rewritten as\n{{ isset .Params \u0026quot;caption\u0026quot; | or isset .Params \u0026quot;title\u0026quot; | or isset .Params \u0026quot;attr\u0026quot; | if }} Stuff Here {{ end }}  Context (aka. the dot) #  The most easily overlooked concept to understand about Go templates is that {{ . }} always refers to the current context. In the top level of your template this will be the data set made available to it. Inside of a iteration it will have the value of the current item. When inside of a loop the context has changed. . will no longer refer to the data available to the entire page. If you need to access this from within the loop you will likely want to set it to a variable instead of depending on the context.\nExample:\n {{ $title := .Site.Title }} {{ range .Params.tags }} \u0026lt;li\u0026gt; \u0026lt;a href=\u0026quot;{{ $baseurl }}/tags/{{ . | urlize }}\u0026quot;\u0026gt;{{ . }}\u0026lt;/a\u0026gt; - {{ $title }} \u0026lt;/li\u0026gt; {{ end }}  Notice how once we have entered the loop the value of {{ . }} has changed. We have defined a variable outside of the loop so we have access to it from within the loop.\nHugo Parameters #  Hugo provides the option of passing values to the template language through the site configuration (for sitewide values), or through the meta data of each specific piece of content. You can define any values of any type (supported by your front matter/config format) and use them however you want to inside of your templates.\nUsing Content (page) Parameters #  In each piece of content you can provide variables to be used by the templates. This happens in the front matter.\nAn example of this is used in this documentation site. Most of the pages benefit from having the table of contents provided. Sometimes the TOC just doesn\u0026rsquo;t make a lot of sense. We\u0026rsquo;ve defined a variable in our front matter of some pages to turn off the TOC from being displayed.\nHere is the example front matter:\n--- title: \u0026quot;Permalinks\u0026quot; date: \u0026quot;2013-11-18\u0026quot; aliases: - \u0026quot;/doc/permalinks/\u0026quot; groups: [\u0026quot;extras\u0026quot;] groups_weight: 30 notoc: true --- Here is the corresponding code inside of the template:\n {{ if not .Params.notoc }} \u0026lt;div id=\u0026quot;toc\u0026quot; class=\u0026quot;well col-md-4 col-sm-6\u0026quot;\u0026gt; {{ .TableOfContents }} \u0026lt;/div\u0026gt; {{ end }}  Using Site (config) Parameters #  In your top-level configuration file (eg, config.yaml) you can define site parameters, which are values which will be available to you in chrome.\nFor instance, you might declare:\nparams: CopyrightHTML: \u0026#34;Copyright \u0026amp;#xA9; 2013 John Doe. All Rights Reserved.\u0026#34; TwitterUser: \u0026#34;spf13\u0026#34; SidebarRecentLimit: 5 Within a footer layout, you might then declare a \u0026lt;footer\u0026gt; which is only provided if the CopyrightHTML parameter is provided, and if it is given, you would declare it to be HTML-safe, so that the HTML entity is not escaped again. This would let you easily update just your top-level config file each January 1st, instead of hunting through your templates.\n{{if .Site.Params.CopyrightHTML}}\u0026lt;footer\u0026gt; \u0026lt;div class=\u0026quot;text-center\u0026quot;\u0026gt;{{.Site.Params.CopyrightHTML | safeHtml}}\u0026lt;/div\u0026gt; \u0026lt;/footer\u0026gt;{{end}} An alternative way of writing the \u0026ldquo;if\u0026rdquo; and then referencing the same value is to use \u0026ldquo;with\u0026rdquo; instead. With rebinds the context . within its scope, and skips the block if the variable is absent:\n{{with .Site.Params.TwitterUser}}\u0026lt;span class=\u0026quot;twitter\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;https://twitter.com/{{.}}\u0026quot; rel=\u0026quot;author\u0026quot;\u0026gt; \u0026lt;img src=\u0026quot;/images/twitter.png\u0026quot; width=\u0026quot;48\u0026quot; height=\u0026quot;48\u0026quot; title=\u0026quot;Twitter: {{.}}\u0026quot; alt=\u0026quot;Twitter\u0026quot;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;/span\u0026gt;{{end}} Finally, if you want to pull \u0026ldquo;magic constants\u0026rdquo; out of your layouts, you can do so, such as in this example:\n\u0026lt;nav class=\u0026quot;recent\u0026quot;\u0026gt; \u0026lt;h1\u0026gt;Recent Posts\u0026lt;/h1\u0026gt; \u0026lt;ul\u0026gt;{{range first .Site.Params.SidebarRecentLimit .Site.Recent}} \u0026lt;li\u0026gt;\u0026lt;a href=\u0026quot;{{.RelPermalink}}\u0026quot;\u0026gt;{{.Title}}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; {{end}}\u0026lt;/ul\u0026gt; \u0026lt;/nav\u0026gt; "},{"id":50,"href":"/posts/hugoisforlovers/","title":"Getting Started with Hugo","section":"Blog","content":"Step 1. Install Hugo #  Go to Hugo releases and download the appropriate version for your OS and architecture.\nSave it somewhere specific as we will be using it in the next step.\nMore complete instructions are available at Install Hugo\nStep 2. Build the Docs #  Hugo has its own example site which happens to also be the documentation site you are reading right now.\nFollow the following steps:\n Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:\ngit clone https://github.com/spf13/hugo cd hugo /path/to/where/you/installed/hugo server --source=./docs \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 27 ms \u0026gt; Web Server is available at http://localhost:1313 \u0026gt; Press ctrl+c to stop  Once you\u0026rsquo;ve gotten here, follow along the rest of this page on your local build.\nStep 3. Change the docs site #  Stop the Hugo process by hitting Ctrl+C.\nNow we are going to run hugo again, but this time with hugo in watch mode.\n/path/to/hugo/from/step/1/hugo server --source=./docs --watch \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 27 ms \u0026gt; Web Server is available at http://localhost:1313 \u0026gt; Watching for changes in /Users/spf13/Code/hugo/docs/content \u0026gt; Press ctrl+c to stop  Open your favorite editor and change one of the source content pages. How about changing this very file to fix the typo. How about changing this very file to fix the typo.\nContent files are found in docs/content/. Unless otherwise specified, files are located at the same relative location as the url, in our case docs/content/overview/quickstart.md.\nChange and save this file.. Notice what happened in your terminal.\n\u0026gt; Change detected, rebuilding site \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 26 ms  Refresh the browser and observe that the typo is now fixed.\nNotice how quick that was. Try to refresh the site before it\u0026rsquo;s finished building. I double dare you. Having nearly instant feedback enables you to have your creativity flow without waiting for long builds.\nStep 4. Have fun #  The best way to learn something is to play with it.\n"},{"id":51,"href":"/docs/electricity/hidden/","title":"Hidden","section":"Electricity","content":"This page is hidden in menu #  Example #  --- bookHidden: true --- File meta control page to show or not.\n true: show false: not show  "},{"id":52,"href":"/docs/invest/hidden/","title":"Hidden","section":"Invest","content":"This page is hidden in menu #  --- bookHidden: true --- File meta control page show or not.\n"},{"id":53,"href":"/docs/shortcodes/buttons/","title":"Buttons","section":"Shortcodes","content":"Buttons #  Buttons are styled links that can lead to local page or external link.\nExample #  {{\u0026lt; button relref=\u0026#34;/\u0026#34; [class=\u0026#34;...\u0026#34;] \u0026gt;}}Get Home{{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026#34;https://github.com/alex-shpak/hugo-book\u0026#34; \u0026gt;}}Contribute{{\u0026lt; /button \u0026gt;}}  Get Home  Contribute  "},{"id":54,"href":"/docs/shortcodes/columns/","title":"Columns","section":"Shortcodes","content":"Columns #  Columns help organize shorter pieces of content horizontally for readability.\n{{\u0026lt; columns \u0026gt;}} \u0026lt;!-- begin columns block --\u0026gt; # Left Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic separator, between columns --\u0026gt; # Mid Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic separator, between columns --\u0026gt; # Right Content Lorem markdownum insigne... {{\u0026lt; /columns \u0026gt;}} Example #  Left Content #  Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.  Mid Content #  Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!  Right Content #  Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.   "},{"id":55,"href":"/docs/shortcodes/details/","title":"Details","section":"Shortcodes","content":"Details #  Details shortcode is a helper for details html5 element. It is going to replace expand shortcode.\nExample #  {{\u0026lt; details \u0026#34;Title\u0026#34; [open] \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /details \u0026gt;}} {{\u0026lt; details title=\u0026#34;Title\u0026#34; open=true \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /details \u0026gt;}} Title Markdown content #  Lorem markdownum insigne\u0026hellip;   "},{"id":56,"href":"/docs/shortcodes/expand/","title":"Expand","section":"Shortcodes","content":"Expand #  Expand shortcode can help to decrease clutter on screen by hiding part of text. Expand content by clicking on it.\nExample #  Default #  {{\u0026lt; expand \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /expand \u0026gt;}}   Expand ↕  Markdown content Lorem markdownum insigne\u0026hellip;    With Custom Label #  {{\u0026lt; expand \u0026#34;Custom Label\u0026#34; \u0026#34;...\u0026#34; \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /expand \u0026gt;}}   Custom Label ...  Markdown content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.    "},{"id":57,"href":"/docs/shortcodes/hints/","title":"Hints","section":"Shortcodes","content":"Hints #  Hint shortcode can be used as hint/alerts/notification block.\nThere are 3 colors to choose: info, warning and danger.\n{{\u0026lt; hint [info|warning|danger] \u0026gt;}} **Markdown content** Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa {{\u0026lt; /hint \u0026gt;}} Example #  Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa  Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa  Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa  "},{"id":58,"href":"/docs/shortcodes/katex/","title":"Katex","section":"Shortcodes","content":"KaTeX #  KaTeX shortcode let you render math typesetting in markdown document. See KaTeX\nExample #  {{\u0026lt; katex [display] [class=\u0026#34;text-center\u0026#34;] \u0026gt;}} f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi {{\u0026lt; /katex \u0026gt;}}     \\[f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi\\]    Display Mode Example #  Here is some inline example:  \\(\\pi(x)\\)  , rendered in the same line. And below is display example, having display: block  \\[f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi\\]  Text continues here.\n"},{"id":59,"href":"/docs/shortcodes/mermaid/","title":"Mermaid","section":"Shortcodes","content":"Mermaid Chart #   MermaidJS is library for generating svg charts and diagrams from text.\nOverride Mermaid Initialization Config\nTo override the initialization config for Mermaid, create a mermaid.json file in your assets folder!\n Example #  {{\u0026lt; mermaid [class=\u0026#34;text-center\u0026#34;]\u0026gt;}} stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --\u0026gt; State2 note left of State2 : This is the note to the left. {{\u0026lt; /mermaid \u0026gt;}}    mermaid.initialize({ \"flowchart\": { \"useMaxWidth\":true }, \"theme\": \"default\" } ) stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 -- State2 note left of State2 : This is the note to the left.   "},{"id":60,"href":"/docs/shortcodes/section/","title":"Section","section":"Shortcodes","content":"Section #  Section renders pages in section as definition list, using title and description.\nExample #  {{\u0026lt; section \u0026gt;}}   First Page  First page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.   Second Page  Second Page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.   "},{"id":61,"href":"/docs/shortcodes/section/first-page/","title":"First Page","section":"Section","content":"First page #  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"},{"id":62,"href":"/docs/shortcodes/section/second-page/","title":"Second Page","section":"Section","content":"Second Page #  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"},{"id":63,"href":"/docs/shortcodes/tabs/","title":"Tabs","section":"Shortcodes","content":"Tabs #  Tabs let you organize content by context, for example installation instructions for each supported platform.\n{{\u0026lt; tabs \u0026#34;uniqueid\u0026#34; \u0026gt;}} {{\u0026lt; tab \u0026#34;MacOS\u0026#34; \u0026gt;}} # MacOS Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026#34;Linux\u0026#34; \u0026gt;}} # Linux Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026#34;Windows\u0026#34; \u0026gt;}} # Windows Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; /tabs \u0026gt;}} Example #  MacOS MacOS #  This is tab MacOS content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nLinux Linux #  This is tab Linux content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nWindows Windows #  This is tab Windows content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n "}]